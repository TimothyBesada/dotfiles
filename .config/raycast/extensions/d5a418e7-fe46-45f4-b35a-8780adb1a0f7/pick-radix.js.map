{
  "version": 3,
  "sources": ["../node_modules/isexe/windows.js", "../node_modules/isexe/mode.js", "../node_modules/isexe/index.js", "../node_modules/which/which.js", "../node_modules/path-key/index.js", "../node_modules/cross-spawn/lib/util/resolveCommand.js", "../node_modules/cross-spawn/lib/util/escape.js", "../node_modules/shebang-regex/index.js", "../node_modules/shebang-command/index.js", "../node_modules/cross-spawn/lib/util/readShebang.js", "../node_modules/cross-spawn/lib/parse.js", "../node_modules/cross-spawn/lib/enoent.js", "../node_modules/cross-spawn/index.js", "../node_modules/signal-exit/signals.js", "../node_modules/signal-exit/index.js", "../node_modules/get-stream/buffer-stream.js", "../node_modules/get-stream/index.js", "../node_modules/merge-stream/index.js", "../src/pick-radix.ts", "../src/utils.ts", "../node_modules/execa/index.js", "../node_modules/strip-final-newline/index.js", "../node_modules/npm-run-path/index.js", "../node_modules/npm-run-path/node_modules/path-key/index.js", "../node_modules/mimic-fn/index.js", "../node_modules/onetime/index.js", "../node_modules/human-signals/src/main.js", "../node_modules/human-signals/src/realtime.js", "../node_modules/human-signals/src/signals.js", "../node_modules/human-signals/src/core.js", "../node_modules/execa/lib/error.js", "../node_modules/execa/lib/stdio.js", "../node_modules/execa/lib/kill.js", "../node_modules/is-stream/index.js", "../node_modules/execa/lib/stream.js", "../node_modules/execa/lib/promise.js", "../node_modules/execa/lib/command.js", "../src/radix.ts"],
  "sourcesContent": ["module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n", "var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n", "const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n", "'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n", "'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n", "'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n", "'use strict';\nmodule.exports = /^#!(.*)/;\n", "'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n", "'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n", "'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n", "'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n", "'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n", "// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {\n    return function () {}\n  }\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return function () {}\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n", "'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\n\nmodule.exports = options => {\n\toptions = {...options};\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst isBuffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || isBuffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (isBuffer) {\n\t\tencoding = null;\n\t}\n\n\tconst stream = new PassThroughStream({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tlet length = 0;\n\tconst chunks = [];\n\n\tstream.on('data', chunk => {\n\t\tchunks.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlength = chunks.length;\n\t\t} else {\n\t\t\tlength += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn chunks;\n\t\t}\n\n\t\treturn isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n\t};\n\n\tstream.getBufferedLength = () => length;\n\n\treturn stream;\n};\n", "'use strict';\nconst {constants: BufferConstants} = require('buffer');\nconst stream = require('stream');\nconst {promisify} = require('util');\nconst bufferStream = require('./buffer-stream');\n\nconst streamPipelinePromisified = promisify(stream.pipeline);\n\nclass MaxBufferError extends Error {\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t\tthis.name = 'MaxBufferError';\n\t}\n}\n\nasync function getStream(inputStream, options) {\n\tif (!inputStream) {\n\t\tthrow new Error('Expected a stream');\n\t}\n\n\toptions = {\n\t\tmaxBuffer: Infinity,\n\t\t...options\n\t};\n\n\tconst {maxBuffer} = options;\n\tconst stream = bufferStream(options);\n\n\tawait new Promise((resolve, reject) => {\n\t\tconst rejectPromise = error => {\n\t\t\t// Don't retrieve an oversized buffer.\n\t\t\tif (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n\t\t\t\terror.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(error);\n\t\t};\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tawait streamPipelinePromisified(inputStream, stream);\n\t\t\t\tresolve();\n\t\t\t} catch (error) {\n\t\t\t\trejectPromise(error);\n\t\t\t}\n\t\t})();\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\trejectPromise(new MaxBufferError());\n\t\t\t}\n\t\t});\n\t});\n\n\treturn stream.getBufferedValue();\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});\nmodule.exports.array = (stream, options) => getStream(stream, {...options, array: true});\nmodule.exports.MaxBufferError = MaxBufferError;\n", "'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n", "import { Clipboard, closeMainWindow, showHUD } from \"@raycast/api\";\nimport { toRadix } from \"./radix\";\nimport { pickColor } from \"./utils\";\n\nexport default async function command() {\n  await closeMainWindow();\n\n  try {\n    const pickedColor = await pickColor();\n    if (!pickedColor) return;\n\n    const radix = toRadix(pickedColor);\n\n    await Clipboard.copy(radix);\n    await showHUD(`\u2705 Copied ${radix} to clipboard!`);\n  } catch (e) {\n    console.error(e);\n    await showHUD(\"\u274C Failed picking color\");\n  }\n}\n", "import { environment } from \"@raycast/api\";\nimport { execa } from \"execa\";\nimport { chmodSync } from \"fs\";\nimport { join } from \"path\";\n\nexport type RGB = Record<\"r\" | \"g\" | \"b\", number>;\nexport type HSL = Record<\"h\" | \"s\" | \"l\", number>;\n\nexport async function pickColor() {\n  // Launch the binary with the correct permissions\n  const command = join(environment.assetsPath, \"color-picker\");\n  chmodSync(command, 0o755);\n\n  try {\n    // Parse the output from the binary\n    const { stdout } = await execa(command);\n    return JSON.parse(stdout) as RGB;\n  } catch (error) {\n    if (\n      typeof error === \"object\" &&\n      error !== null &&\n      \"stdout\" in error &&\n      error.stdout === \"No color selected\"\n    )\n      return undefined;\n    else throw error;\n  }\n}\n\n/**\n * Naive implementation of finding the nearest color in a list of rgb-colors\n */\nexport function nearestColor(color: RGB, colors: RGB[]) {\n  let minDistance = Infinity;\n  let nearestColor = colors[0];\n  if (!nearestColor) throw new Error(\"No colors provided\");\n\n  for (const c of colors) {\n    const r = c.r - color.r;\n    const g = c.g - color.g;\n    const b = c.b - color.b;\n    const distance = r * r + g * g + b * b;\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      nearestColor = c;\n    }\n  }\n\n  return nearestColor;\n}\n\nexport function toRgb(hex: string): RGB {\n  if (hex[0] === \"#\") hex = hex.slice(1);\n  if (hex === \"000\") return { r: 0, g: 0, b: 0 };\n  if (hex === \"fff\") return { r: 255, g: 255, b: 255 };\n\n  const r = parseInt(hex.slice(0, 2), 16);\n  const g = parseInt(hex.slice(2, 4), 16);\n  const b = parseInt(hex.slice(4, 6), 16);\n  return { r, g, b };\n}\n\nexport function toHex(rgb: RGB) {\n  const { r, g, b } = rgb;\n  const [intR, intG, intB] = [r, g, b].map((c) => Math.round(c));\n  return `#${intR.toString(16)}${intG.toString(16)}${intB.toString(16)}`;\n}\n\nexport function parseHslString(string: string): HSL {\n  const [h, s, l] = string\n    .replace(\"hsl(\", \"\")\n    .replace(\")\", \"\")\n    .split(\",\")\n    .map((s) =>\n      s.includes(\"%\") ? parseFloat(s.trim()) / 100 : parseFloat(s.trim())\n    );\n\n  if (h === undefined || s === undefined || l === undefined)\n    throw new Error(\"Invalid HSL string\");\n\n  return { h, s, l };\n}\n\nexport function fromHsl(hsl: HSL): RGB {\n  const { h, s, l } = hsl;\n\n  const fn = (n: number) => {\n    const k = (n + h / 30) % 12;\n    const a = s * Math.min(l, 1 - l);\n    return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n  };\n\n  return { r: fn(0) * 255, g: fn(8) * 255, b: fn(4) * 255 };\n}\n", "import {Buffer} from 'node:buffer';\nimport path from 'node:path';\nimport childProcess from 'node:child_process';\nimport process from 'node:process';\nimport crossSpawn from 'cross-spawn';\nimport stripFinalNewline from 'strip-final-newline';\nimport {npmRunPathEnv} from 'npm-run-path';\nimport onetime from 'onetime';\nimport {makeError} from './lib/error.js';\nimport {normalizeStdio, normalizeStdioNode} from './lib/stdio.js';\nimport {spawnedKill, spawnedCancel, setupTimeout, validateTimeout, setExitHandler} from './lib/kill.js';\nimport {handleInput, getSpawnedResult, makeAllStream, validateInputSync} from './lib/stream.js';\nimport {mergePromise, getSpawnedPromise} from './lib/promise.js';\nimport {joinCommand, parseCommand, getEscapedCommand} from './lib/command.js';\n\nconst DEFAULT_MAX_BUFFER = 1000 * 1000 * 100;\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, localDir, execPath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal) {\n\t\treturn npmRunPathEnv({env, cwd: localDir, execPath});\n\t}\n\n\treturn env;\n};\n\nconst handleArguments = (file, args, options = {}) => {\n\tconst parsed = crossSpawn._parse(file, args, options);\n\tfile = parsed.command;\n\targs = parsed.args;\n\toptions = parsed.options;\n\n\toptions = {\n\t\tmaxBuffer: DEFAULT_MAX_BUFFER,\n\t\tbuffer: true,\n\t\tstripFinalNewline: true,\n\t\textendEnv: true,\n\t\tpreferLocal: false,\n\t\tlocalDir: options.cwd || process.cwd(),\n\t\texecPath: process.execPath,\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true,\n\t\tall: false,\n\t\twindowsHide: true,\n\t\t...options,\n\t};\n\n\toptions.env = getEnv(options);\n\n\toptions.stdio = normalizeStdio(options);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\targs.unshift('/q');\n\t}\n\n\treturn {file, args, options, parsed};\n};\n\nconst handleOutput = (options, value, error) => {\n\tif (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n\t\t// When `execaSync()` errors, we normalize it to '' to mimic `execa()`\n\t\treturn error === undefined ? undefined : '';\n\t}\n\n\tif (options.stripFinalNewline) {\n\t\treturn stripFinalNewline(value);\n\t}\n\n\treturn value;\n};\n\nexport function execa(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateTimeout(parsed.options);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\t// Ensure the returned error is always both a promise and a child process\n\t\tconst dummySpawned = new childProcess.ChildProcess();\n\t\tconst errorPromise = Promise.reject(makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t}));\n\t\treturn mergePromise(dummySpawned, errorPromise);\n\t}\n\n\tconst spawnedPromise = getSpawnedPromise(spawned);\n\tconst timedPromise = setupTimeout(spawned, parsed.options, spawnedPromise);\n\tconst processDone = setExitHandler(spawned, parsed.options, timedPromise);\n\n\tconst context = {isCanceled: false};\n\n\tspawned.kill = spawnedKill.bind(null, spawned.kill.bind(spawned));\n\tspawned.cancel = spawnedCancel.bind(null, spawned, context);\n\n\tconst handlePromise = async () => {\n\t\tconst [{error, exitCode, signal, timedOut}, stdoutResult, stderrResult, allResult] = await getSpawnedResult(spawned, parsed.options, processDone);\n\t\tconst stdout = handleOutput(parsed.options, stdoutResult);\n\t\tconst stderr = handleOutput(parsed.options, stderrResult);\n\t\tconst all = handleOutput(parsed.options, allResult);\n\n\t\tif (error || exitCode !== 0 || signal !== null) {\n\t\t\tconst returnedError = makeError({\n\t\t\t\terror,\n\t\t\t\texitCode,\n\t\t\t\tsignal,\n\t\t\t\tstdout,\n\t\t\t\tstderr,\n\t\t\t\tall,\n\t\t\t\tcommand,\n\t\t\t\tescapedCommand,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut,\n\t\t\t\tisCanceled: context.isCanceled || (parsed.options.signal ? parsed.options.signal.aborted : false),\n\t\t\t\tkilled: spawned.killed,\n\t\t\t});\n\n\t\t\tif (!parsed.options.reject) {\n\t\t\t\treturn returnedError;\n\t\t\t}\n\n\t\t\tthrow returnedError;\n\t\t}\n\n\t\treturn {\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\texitCode: 0,\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\tall,\n\t\t\tfailed: false,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t};\n\t};\n\n\tconst handlePromiseOnce = onetime(handlePromise);\n\n\thandleInput(spawned, parsed.options.input);\n\n\tspawned.all = makeAllStream(spawned, parsed.options);\n\n\treturn mergePromise(spawned, handlePromiseOnce);\n}\n\nexport function execaSync(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateInputSync(parsed.options);\n\n\tlet result;\n\ttry {\n\t\tresult = childProcess.spawnSync(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\tthrow makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t});\n\t}\n\n\tconst stdout = handleOutput(parsed.options, result.stdout, result.error);\n\tconst stderr = handleOutput(parsed.options, result.stderr, result.error);\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst error = makeError({\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\terror: result.error,\n\t\t\tsignal: result.signal,\n\t\t\texitCode: result.status,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: result.error && result.error.code === 'ETIMEDOUT',\n\t\t\tisCanceled: false,\n\t\t\tkilled: result.signal !== null,\n\t\t});\n\n\t\tif (!parsed.options.reject) {\n\t\t\treturn error;\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\texitCode: 0,\n\t\tstdout,\n\t\tstderr,\n\t\tfailed: false,\n\t\ttimedOut: false,\n\t\tisCanceled: false,\n\t\tkilled: false,\n\t};\n}\n\nexport function execaCommand(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa(file, args, options);\n}\n\nexport function execaCommandSync(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execaSync(file, args, options);\n}\n\nexport function execaNode(scriptPath, args, options = {}) {\n\tif (args && !Array.isArray(args) && typeof args === 'object') {\n\t\toptions = args;\n\t\targs = [];\n\t}\n\n\tconst stdio = normalizeStdioNode(options);\n\tconst defaultExecArgv = process.execArgv.filter(arg => !arg.startsWith('--inspect'));\n\n\tconst {\n\t\tnodePath = process.execPath,\n\t\tnodeOptions = defaultExecArgv,\n\t} = options;\n\n\treturn execa(\n\t\tnodePath,\n\t\t[\n\t\t\t...nodeOptions,\n\t\t\tscriptPath,\n\t\t\t...(Array.isArray(args) ? args : []),\n\t\t],\n\t\t{\n\t\t\t...options,\n\t\t\tstdin: undefined,\n\t\t\tstdout: undefined,\n\t\t\tstderr: undefined,\n\t\t\tstdio,\n\t\t\tshell: false,\n\t\t},\n\t);\n}\n", "export default function stripFinalNewline(input) {\n\tconst LF = typeof input === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tconst CR = typeof input === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (input[input.length - 1] === LF) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\tif (input[input.length - 1] === CR) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\treturn input;\n}\n", "import process from 'node:process';\nimport path from 'node:path';\nimport url from 'node:url';\nimport pathKey from 'path-key';\n\nexport function npmRunPath(options = {}) {\n\tconst {\n\t\tcwd = process.cwd(),\n\t\tpath: path_ = process.env[pathKey()],\n\t\texecPath = process.execPath,\n\t} = options;\n\n\tlet previous;\n\tconst cwdString = cwd instanceof URL ? url.fileURLToPath(cwd) : cwd;\n\tlet cwdPath = path.resolve(cwdString);\n\tconst result = [];\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n\n\t// Ensure the running `node` binary is used.\n\tresult.push(path.resolve(cwdString, execPath, '..'));\n\n\treturn [...result, path_].join(path.delimiter);\n}\n\nexport function npmRunPathEnv({env = process.env, ...options} = {}) {\n\tenv = {...env};\n\n\tconst path = pathKey({env});\n\toptions.path = env[path];\n\tenv[path] = npmRunPath(options);\n\n\treturn env;\n}\n", "export default function pathKey(options = {}) {\n\tconst {\n\t\tenv = process.env,\n\t\tplatform = process.platform\n\t} = options;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n}\n", "const copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n// - one its descriptors is changed\n// - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nexport default function mimicFunction(to, from, {ignoreNonConfigurable = false} = {}) {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n}\n", "import mimicFunction from 'mimic-fn';\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFunction(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nonetime.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n\nexport default onetime;\n", "import { constants } from 'os'\n\nimport { SIGRTMAX } from './realtime.js'\nimport { getSignals } from './signals.js'\n\n// Retrieve `signalsByName`, an object mapping signal name to signal properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByName = function () {\n  const signals = getSignals()\n  return signals.reduce(getSignalByName, {})\n}\n\nconst getSignalByName = function (\n  signalByNameMemo,\n  { name, number, description, supported, action, forced, standard },\n) {\n  return {\n    ...signalByNameMemo,\n    [name]: { name, number, description, supported, action, forced, standard },\n  }\n}\n\nexport const signalsByName = getSignalsByName()\n\n// Retrieve `signalsByNumber`, an object mapping signal number to signal\n// properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByNumber = function () {\n  const signals = getSignals()\n  const length = SIGRTMAX + 1\n  const signalsA = Array.from({ length }, (value, number) =>\n    getSignalByNumber(number, signals),\n  )\n  return Object.assign({}, ...signalsA)\n}\n\nconst getSignalByNumber = function (number, signals) {\n  const signal = findSignalByNumber(number, signals)\n\n  if (signal === undefined) {\n    return {}\n  }\n\n  const { name, description, supported, action, forced, standard } = signal\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard,\n    },\n  }\n}\n\n// Several signals might end up sharing the same number because of OS-specific\n// numbers, in which case those prevail.\nconst findSignalByNumber = function (number, signals) {\n  const signal = signals.find(({ name }) => constants.signals[name] === number)\n\n  if (signal !== undefined) {\n    return signal\n  }\n\n  return signals.find((signalA) => signalA.number === number)\n}\n\nexport const signalsByNumber = getSignalsByNumber()\n", "// List of realtime signals with information about them\nexport const getRealtimeSignals = function () {\n  const length = SIGRTMAX - SIGRTMIN + 1\n  return Array.from({ length }, getRealtimeSignal)\n}\n\nconst getRealtimeSignal = function (value, index) {\n  return {\n    name: `SIGRT${index + 1}`,\n    number: SIGRTMIN + index,\n    action: 'terminate',\n    description: 'Application-specific signal (realtime)',\n    standard: 'posix',\n  }\n}\n\nconst SIGRTMIN = 34\nexport const SIGRTMAX = 64\n", "import { constants } from 'os'\n\nimport { SIGNALS } from './core.js'\nimport { getRealtimeSignals } from './realtime.js'\n\n// Retrieve list of know signals (including realtime) with information about\n// them\nexport const getSignals = function () {\n  const realtimeSignals = getRealtimeSignals()\n  const signals = [...SIGNALS, ...realtimeSignals].map(normalizeSignal)\n  return signals\n}\n\n// Normalize signal:\n//  - `number`: signal numbers are OS-specific. This is taken into account by\n//    `os.constants.signals`. However we provide a default `number` since some\n//     signals are not defined for some OS.\n//  - `forced`: set default to `false`\n//  - `supported`: set value\nconst normalizeSignal = function ({\n  name,\n  number: defaultNumber,\n  description,\n  action,\n  forced = false,\n  standard,\n}) {\n  const {\n    signals: { [name]: constantSignal },\n  } = constants\n  const supported = constantSignal !== undefined\n  const number = supported ? constantSignal : defaultNumber\n  return { name, number, description, supported, action, forced, standard }\n}\n", "/* eslint-disable max-lines */\n// List of known process signals with information about them\nexport const SIGNALS = [\n  {\n    name: 'SIGHUP',\n    number: 1,\n    action: 'terminate',\n    description: 'Terminal closed',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGINT',\n    number: 2,\n    action: 'terminate',\n    description: 'User interruption with CTRL-C',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGQUIT',\n    number: 3,\n    action: 'core',\n    description: 'User interruption with CTRL-\\\\',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGILL',\n    number: 4,\n    action: 'core',\n    description: 'Invalid machine instruction',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGTRAP',\n    number: 5,\n    action: 'core',\n    description: 'Debugger breakpoint',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGABRT',\n    number: 6,\n    action: 'core',\n    description: 'Aborted',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGIOT',\n    number: 6,\n    action: 'core',\n    description: 'Aborted',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGBUS',\n    number: 7,\n    action: 'core',\n    description:\n      'Bus error due to misaligned, non-existing address or paging error',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGEMT',\n    number: 7,\n    action: 'terminate',\n    description: 'Command should be emulated but is not implemented',\n    standard: 'other',\n  },\n  {\n    name: 'SIGFPE',\n    number: 8,\n    action: 'core',\n    description: 'Floating point arithmetic error',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGKILL',\n    number: 9,\n    action: 'terminate',\n    description: 'Forced termination',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGUSR1',\n    number: 10,\n    action: 'terminate',\n    description: 'Application-specific signal',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGSEGV',\n    number: 11,\n    action: 'core',\n    description: 'Segmentation fault',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGUSR2',\n    number: 12,\n    action: 'terminate',\n    description: 'Application-specific signal',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGPIPE',\n    number: 13,\n    action: 'terminate',\n    description: 'Broken pipe or socket',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGALRM',\n    number: 14,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGTERM',\n    number: 15,\n    action: 'terminate',\n    description: 'Termination',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGSTKFLT',\n    number: 16,\n    action: 'terminate',\n    description: 'Stack is empty or overflowed',\n    standard: 'other',\n  },\n  {\n    name: 'SIGCHLD',\n    number: 17,\n    action: 'ignore',\n    description: 'Child process terminated, paused or unpaused',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGCLD',\n    number: 17,\n    action: 'ignore',\n    description: 'Child process terminated, paused or unpaused',\n    standard: 'other',\n  },\n  {\n    name: 'SIGCONT',\n    number: 18,\n    action: 'unpause',\n    description: 'Unpaused',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGSTOP',\n    number: 19,\n    action: 'pause',\n    description: 'Paused',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGTSTP',\n    number: 20,\n    action: 'pause',\n    description: 'Paused using CTRL-Z or \"suspend\"',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGTTIN',\n    number: 21,\n    action: 'pause',\n    description: 'Background process cannot read terminal input',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGBREAK',\n    number: 21,\n    action: 'terminate',\n    description: 'User interruption with CTRL-BREAK',\n    standard: 'other',\n  },\n  {\n    name: 'SIGTTOU',\n    number: 22,\n    action: 'pause',\n    description: 'Background process cannot write to terminal output',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGURG',\n    number: 23,\n    action: 'ignore',\n    description: 'Socket received out-of-band data',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGXCPU',\n    number: 24,\n    action: 'core',\n    description: 'Process timed out',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGXFSZ',\n    number: 25,\n    action: 'core',\n    description: 'File too big',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGVTALRM',\n    number: 26,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGPROF',\n    number: 27,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGWINCH',\n    number: 28,\n    action: 'ignore',\n    description: 'Terminal window size changed',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGIO',\n    number: 29,\n    action: 'terminate',\n    description: 'I/O is available',\n    standard: 'other',\n  },\n  {\n    name: 'SIGPOLL',\n    number: 29,\n    action: 'terminate',\n    description: 'Watched event',\n    standard: 'other',\n  },\n  {\n    name: 'SIGINFO',\n    number: 29,\n    action: 'ignore',\n    description: 'Request for process information',\n    standard: 'other',\n  },\n  {\n    name: 'SIGPWR',\n    number: 30,\n    action: 'terminate',\n    description: 'Device running out of power',\n    standard: 'systemv',\n  },\n  {\n    name: 'SIGSYS',\n    number: 31,\n    action: 'core',\n    description: 'Invalid system call',\n    standard: 'other',\n  },\n  {\n    name: 'SIGUNUSED',\n    number: 31,\n    action: 'terminate',\n    description: 'Invalid system call',\n    standard: 'other',\n  },\n]\n/* eslint-enable max-lines */\n", "import {signalsByName} from 'human-signals';\n\nconst getErrorPrefix = ({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled}) => {\n\tif (timedOut) {\n\t\treturn `timed out after ${timeout} milliseconds`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn 'was canceled';\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `failed with ${errorCode}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'failed';\n};\n\nexport const makeError = ({\n\tstdout,\n\tstderr,\n\tall,\n\terror,\n\tsignal,\n\texitCode,\n\tcommand,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tkilled,\n\tparsed: {options: {timeout}},\n}) => {\n\t// `signal` and `exitCode` emitted on `spawned.on('exit')` event can be `null`.\n\t// We normalize them to `undefined`\n\texitCode = exitCode === null ? undefined : exitCode;\n\tsignal = signal === null ? undefined : signal;\n\tconst signalDescription = signal === undefined ? undefined : signalsByName[signal].description;\n\n\tconst errorCode = error && error.code;\n\n\tconst prefix = getErrorPrefix({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled});\n\tconst execaMessage = `Command ${prefix}: ${command}`;\n\tconst isError = Object.prototype.toString.call(error) === '[object Error]';\n\tconst shortMessage = isError ? `${execaMessage}\\n${error.message}` : execaMessage;\n\tconst message = [shortMessage, stderr, stdout].filter(Boolean).join('\\n');\n\n\tif (isError) {\n\t\terror.originalMessage = error.message;\n\t\terror.message = message;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\n\terror.shortMessage = shortMessage;\n\terror.command = command;\n\terror.escapedCommand = escapedCommand;\n\terror.exitCode = exitCode;\n\terror.signal = signal;\n\terror.signalDescription = signalDescription;\n\terror.stdout = stdout;\n\terror.stderr = stderr;\n\n\tif (all !== undefined) {\n\t\terror.all = all;\n\t}\n\n\tif ('bufferedData' in error) {\n\t\tdelete error.bufferedData;\n\t}\n\n\terror.failed = true;\n\terror.timedOut = Boolean(timedOut);\n\terror.isCanceled = isCanceled;\n\terror.killed = killed && !timedOut;\n\n\treturn error;\n};\n", "const aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nexport const normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\n// `ipc` is pushed unless it is already present\nexport const normalizeStdioNode = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n", "import os from 'node:os';\nimport onExit from 'signal-exit';\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior\nexport const spawnedKill = (kill, signal = 'SIGTERM', options = {}) => {\n\tconst killResult = kill(signal);\n\tsetKillTimeout(kill, signal, options, killResult);\n\treturn killResult;\n};\n\nconst setKillTimeout = (kill, signal, options, killResult) => {\n\tif (!shouldForceKill(signal, options, killResult)) {\n\t\treturn;\n\t}\n\n\tconst timeout = getForceKillAfterTimeout(options);\n\tconst t = setTimeout(() => {\n\t\tkill('SIGKILL');\n\t}, timeout);\n\n\t// Guarded because there's no `.unref()` when `execa` is used in the renderer\n\t// process in Electron. This cannot be tested since we don't run tests in\n\t// Electron.\n\t// istanbul ignore else\n\tif (t.unref) {\n\t\tt.unref();\n\t}\n};\n\nconst shouldForceKill = (signal, {forceKillAfterTimeout}, killResult) => isSigterm(signal) && forceKillAfterTimeout !== false && killResult;\n\nconst isSigterm = signal => signal === os.constants.signals.SIGTERM\n\t\t|| (typeof signal === 'string' && signal.toUpperCase() === 'SIGTERM');\n\nconst getForceKillAfterTimeout = ({forceKillAfterTimeout = true}) => {\n\tif (forceKillAfterTimeout === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterTimeout) || forceKillAfterTimeout < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${forceKillAfterTimeout}\\` (${typeof forceKillAfterTimeout})`);\n\t}\n\n\treturn forceKillAfterTimeout;\n};\n\n// `childProcess.cancel()`\nexport const spawnedCancel = (spawned, context) => {\n\tconst killResult = spawned.kill();\n\n\tif (killResult) {\n\t\tcontext.isCanceled = true;\n\t}\n};\n\nconst timeoutKill = (spawned, signal, reject) => {\n\tspawned.kill(signal);\n\treject(Object.assign(new Error('Timed out'), {timedOut: true, signal}));\n};\n\n// `timeout` option handling\nexport const setupTimeout = (spawned, {timeout, killSignal = 'SIGTERM'}, spawnedPromise) => {\n\tif (timeout === 0 || timeout === undefined) {\n\t\treturn spawnedPromise;\n\t}\n\n\tlet timeoutId;\n\tconst timeoutPromise = new Promise((resolve, reject) => {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutKill(spawned, killSignal, reject);\n\t\t}, timeout);\n\t});\n\n\tconst safeSpawnedPromise = spawnedPromise.finally(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\treturn Promise.race([timeoutPromise, safeSpawnedPromise]);\n};\n\nexport const validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// `cleanup` option handling\nexport const setExitHandler = async (spawned, {cleanup, detached}, timedPromise) => {\n\tif (!cleanup || detached) {\n\t\treturn timedPromise;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tspawned.kill();\n\t});\n\n\treturn timedPromise.finally(() => {\n\t\tremoveExitHandler();\n\t});\n};\n", "export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n", "import {isStream} from 'is-stream';\nimport getStream from 'get-stream';\nimport mergeStream from 'merge-stream';\n\n// `input` option\nexport const handleInput = (spawned, input) => {\n\t// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n\t// @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n\tif (input === undefined || spawned.stdin === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nexport const makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\tif (encoding) {\n\t\treturn getStream(stream, {encoding, maxBuffer});\n\t}\n\n\treturn getStream.buffer(stream, {maxBuffer});\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nexport const getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise),\n\t\t]);\n\t}\n};\n\nexport const validateInputSync = ({input}) => {\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n};\n", "const nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property),\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nexport const mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function'\n\t\t\t? (...args) => Reflect.apply(descriptor.value, promise(), args)\n\t\t\t: descriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nexport const getSpawnedPromise = spawned => new Promise((resolve, reject) => {\n\tspawned.on('exit', (exitCode, signal) => {\n\t\tresolve({exitCode, signal});\n\t});\n\n\tspawned.on('error', error => {\n\t\treject(error);\n\t});\n\n\tif (spawned.stdin) {\n\t\tspawned.stdin.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\t}\n});\n", "const normalizeArgs = (file, args = []) => {\n\tif (!Array.isArray(args)) {\n\t\treturn [file];\n\t}\n\n\treturn [file, ...args];\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w.-]+$/;\nconst DOUBLE_QUOTES_REGEXP = /\"/g;\n\nconst escapeArg = arg => {\n\tif (typeof arg !== 'string' || NO_ESCAPE_REGEXP.test(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn `\"${arg.replace(DOUBLE_QUOTES_REGEXP, '\\\\\"')}\"`;\n};\n\nexport const joinCommand = (file, args) => normalizeArgs(file, args).join(' ');\n\nexport const getEscapedCommand = (file, args) => normalizeArgs(file, args).map(arg => escapeArg(arg)).join(' ');\n\nconst SPACES_REGEXP = / +/g;\n\n// Handle `execaCommand()`\nexport const parseCommand = command => {\n\tconst tokens = [];\n\tfor (const token of command.trim().split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens[tokens.length - 1];\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n", "import { fromHsl, nearestColor, parseHslString, RGB } from \"./utils\";\n\nexport function getTransformedRadixConfig() {\n  const rgbToRadix: Map<RGB, string> = new Map();\n\n  for (const color in radixColors.light) {\n    const hsl = parseHslString(\n      radixColors.light[color as keyof typeof radixColors.light]\n    );\n    const rgb = fromHsl(hsl);\n    rgbToRadix.set(rgb, color);\n  }\n\n  for (const color in radixColors.dark) {\n    const hsl = parseHslString(\n      radixColors.dark[color as keyof typeof radixColors.dark]\n    );\n    const rgb = fromHsl(hsl);\n    rgbToRadix.set(rgb, color);\n  }\n\n  return rgbToRadix;\n}\n\n/**\n * Takes an RGB color and returns the closest Radix UI color\n */\nexport function toRadix(color: RGB) {\n  const radixColors = getTransformedRadixConfig();\n  const colors = Array.from(radixColors.keys());\n\n  const nearest = nearestColor(color, colors);\n  const radix = radixColors.get(nearest);\n\n  if (!radix) throw new Error(\"Could not find radix color\");\n\n  return radix;\n}\n\nexport const radixColors = {\n  light: {\n    amber1: \"hsl(36, 100%, 6.1%)\",\n    amber2: \"hsl(35, 100%, 7.6%)\",\n    amber3: \"hsl(32, 100%, 10.2%)\",\n    amber4: \"hsl(32, 100%, 12.4%)\",\n    amber5: \"hsl(33, 100%, 14.6%)\",\n    amber6: \"hsl(35, 100%, 17.1%)\",\n    amber7: \"hsl(35, 91.0%, 21.6%)\",\n    amber8: \"hsl(36, 100%, 25.5%)\",\n    amber9: \"hsl(39, 100%, 57.0%)\",\n    amber10: \"hsl(43, 100%, 64.0%)\",\n    amber11: \"hsl(39, 90.0%, 49.8%)\",\n    amber12: \"hsl(39, 97.0%, 93.2%)\",\n\n    blue1: \"hsl(212, 35.0%, 9.2%)\",\n    blue2: \"hsl(216, 50.0%, 11.8%)\",\n    blue3: \"hsl(214, 59.4%, 15.3%)\",\n    blue4: \"hsl(214, 65.8%, 17.9%)\",\n    blue5: \"hsl(213, 71.2%, 20.2%)\",\n    blue6: \"hsl(212, 77.4%, 23.1%)\",\n    blue7: \"hsl(211, 85.1%, 27.4%)\",\n    blue8: \"hsl(211, 89.7%, 34.1%)\",\n    blue9: \"hsl(206, 100%, 50.0%)\",\n    blue10: \"hsl(209, 100%, 60.6%)\",\n    blue11: \"hsl(210, 100%, 66.1%)\",\n    blue12: \"hsl(206, 98.0%, 95.8%)\",\n\n    bronze1: \"hsl(17, 10.0%, 8.8%)\",\n    bronze2: \"hsl(15, 14.8%, 10.6%)\",\n    bronze3: \"hsl(15, 16.3%, 14.3%)\",\n    bronze4: \"hsl(16, 17.1%, 17.2%)\",\n    bronze5: \"hsl(16, 17.6%, 19.6%)\",\n    bronze6: \"hsl(16, 18.1%, 22.9%)\",\n    bronze7: \"hsl(17, 18.8%, 28.8%)\",\n    bronze8: \"hsl(17, 19.6%, 38.0%)\",\n    bronze9: \"hsl(17, 20.0%, 54.0%)\",\n    bronze10: \"hsl(18, 24.0%, 59.0%)\",\n    bronze11: \"hsl(18, 35.0%, 68.5%)\",\n    bronze12: \"hsl(18, 57.0%, 94.1%)\",\n\n    brown1: \"hsl(22, 15.0%, 8.7%)\",\n    brown2: \"hsl(20, 28.3%, 10.4%)\",\n    brown3: \"hsl(20, 28.0%, 14.0%)\",\n    brown4: \"hsl(21, 28.4%, 16.5%)\",\n    brown5: \"hsl(22, 28.7%, 18.9%)\",\n    brown6: \"hsl(23, 29.0%, 22.3%)\",\n    brown7: \"hsl(25, 29.5%, 27.8%)\",\n    brown8: \"hsl(27, 30.1%, 35.9%)\",\n    brown9: \"hsl(28, 34.0%, 51.0%)\",\n    brown10: \"hsl(28, 41.4%, 55.8%)\",\n    brown11: \"hsl(28, 60.0%, 64.5%)\",\n    brown12: \"hsl(30, 67.0%, 94.0%)\",\n\n    crimson1: \"hsl(335, 20.0%, 9.6%)\",\n    crimson2: \"hsl(335, 32.2%, 11.6%)\",\n    crimson3: \"hsl(335, 42.5%, 16.5%)\",\n    crimson4: \"hsl(335, 47.2%, 19.3%)\",\n    crimson5: \"hsl(335, 50.9%, 21.8%)\",\n    crimson6: \"hsl(335, 55.7%, 25.3%)\",\n    crimson7: \"hsl(336, 62.9%, 30.8%)\",\n    crimson8: \"hsl(336, 74.9%, 39.0%)\",\n    crimson9: \"hsl(336, 80.0%, 57.8%)\",\n    crimson10: \"hsl(339, 84.1%, 62.6%)\",\n    crimson11: \"hsl(341, 90.0%, 67.3%)\",\n    crimson12: \"hsl(332, 87.0%, 96.0%)\",\n\n    cyan1: \"hsl(192, 60.0%, 7.2%)\",\n    cyan2: \"hsl(192, 71.4%, 8.2%)\",\n    cyan3: \"hsl(192, 75.9%, 10.8%)\",\n    cyan4: \"hsl(192, 79.3%, 12.8%)\",\n    cyan5: \"hsl(192, 82.5%, 14.6%)\",\n    cyan6: \"hsl(192, 86.6%, 16.9%)\",\n    cyan7: \"hsl(192, 92.6%, 20.1%)\",\n    cyan8: \"hsl(192, 100%, 24.5%)\",\n    cyan9: \"hsl(190, 95.0%, 39.0%)\",\n    cyan10: \"hsl(188, 100%, 40.0%)\",\n    cyan11: \"hsl(186, 100%, 42.2%)\",\n    cyan12: \"hsl(185, 73.0%, 93.2%)\",\n\n    gold1: \"hsl(44, 9.0%, 8.3%)\",\n    gold2: \"hsl(43, 14.3%, 9.6%)\",\n    gold3: \"hsl(42, 15.5%, 13.0%)\",\n    gold4: \"hsl(41, 16.4%, 15.6%)\",\n    gold5: \"hsl(41, 16.9%, 17.8%)\",\n    gold6: \"hsl(40, 17.6%, 20.8%)\",\n    gold7: \"hsl(38, 18.5%, 26.4%)\",\n    gold8: \"hsl(36, 19.6%, 35.1%)\",\n    gold9: \"hsl(36, 20.0%, 49.5%)\",\n    gold10: \"hsl(36, 22.3%, 54.5%)\",\n    gold11: \"hsl(35, 30.0%, 64.0%)\",\n    gold12: \"hsl(49, 52.0%, 93.8%)\",\n\n    grass1: \"hsl(146, 30.0%, 7.4%)\",\n    grass2: \"hsl(136, 33.3%, 8.8%)\",\n    grass3: \"hsl(137, 36.0%, 11.4%)\",\n    grass4: \"hsl(137, 37.6%, 13.7%)\",\n    grass5: \"hsl(136, 38.7%, 16.0%)\",\n    grass6: \"hsl(135, 39.6%, 19.1%)\",\n    grass7: \"hsl(134, 40.3%, 23.8%)\",\n    grass8: \"hsl(131, 40.1%, 30.8%)\",\n    grass9: \"hsl(131, 41.0%, 46.5%)\",\n    grass10: \"hsl(131, 39.0%, 52.1%)\",\n    grass11: \"hsl(131, 43.0%, 57.2%)\",\n    grass12: \"hsl(137, 72.0%, 94.0%)\",\n\n    gray1: \"hsl(0, 0%, 8.5%)\",\n    gray2: \"hsl(0, 0%, 11.0%)\",\n    gray3: \"hsl(0, 0%, 13.6%)\",\n    gray4: \"hsl(0, 0%, 15.8%)\",\n    gray5: \"hsl(0, 0%, 17.9%)\",\n    gray6: \"hsl(0, 0%, 20.5%)\",\n    gray7: \"hsl(0, 0%, 24.3%)\",\n    gray8: \"hsl(0, 0%, 31.2%)\",\n    gray9: \"hsl(0, 0%, 43.9%)\",\n    gray10: \"hsl(0, 0%, 49.4%)\",\n    gray11: \"hsl(0, 0%, 62.8%)\",\n    gray12: \"hsl(0, 0%, 93.0%)\",\n\n    green1: \"hsl(146, 30.0%, 7.4%)\",\n    green2: \"hsl(155, 44.2%, 8.4%)\",\n    green3: \"hsl(155, 46.7%, 10.9%)\",\n    green4: \"hsl(154, 48.4%, 12.9%)\",\n    green5: \"hsl(154, 49.7%, 14.9%)\",\n    green6: \"hsl(154, 50.9%, 17.6%)\",\n    green7: \"hsl(153, 51.8%, 21.8%)\",\n    green8: \"hsl(151, 51.7%, 28.4%)\",\n    green9: \"hsl(151, 55.0%, 41.5%)\",\n    green10: \"hsl(151, 49.3%, 46.5%)\",\n    green11: \"hsl(151, 50.0%, 53.2%)\",\n    green12: \"hsl(137, 72.0%, 94.0%)\",\n\n    indigo1: \"hsl(229, 24.0%, 10.0%)\",\n    indigo2: \"hsl(230, 36.4%, 12.9%)\",\n    indigo3: \"hsl(228, 43.3%, 17.5%)\",\n    indigo4: \"hsl(227, 47.2%, 21.0%)\",\n    indigo5: \"hsl(227, 50.0%, 24.1%)\",\n    indigo6: \"hsl(226, 52.9%, 28.2%)\",\n    indigo7: \"hsl(226, 56.0%, 34.5%)\",\n    indigo8: \"hsl(226, 58.2%, 44.1%)\",\n    indigo9: \"hsl(226, 70.0%, 55.5%)\",\n    indigo10: \"hsl(227, 75.2%, 61.6%)\",\n    indigo11: \"hsl(228, 100%, 75.9%)\",\n    indigo12: \"hsl(226, 83.0%, 96.3%)\",\n\n    lime1: \"hsl(75, 55.0%, 6.0%)\",\n    lime2: \"hsl(74, 56.8%, 7.3%)\",\n    lime3: \"hsl(78, 50.2%, 9.9%)\",\n    lime4: \"hsl(79, 50.3%, 12.1%)\",\n    lime5: \"hsl(79, 52.6%, 14.2%)\",\n    lime6: \"hsl(78, 55.7%, 16.7%)\",\n    lime7: \"hsl(77, 59.7%, 20.1%)\",\n    lime8: \"hsl(75, 64.8%, 24.5%)\",\n    lime9: \"hsl(81, 67.0%, 50.0%)\",\n    lime10: \"hsl(75, 85.0%, 60.0%)\",\n    lime11: \"hsl(81, 70.0%, 43.8%)\",\n    lime12: \"hsl(84, 79.0%, 92.6%)\",\n\n    mint1: \"hsl(173, 50.0%, 6.6%)\",\n    mint2: \"hsl(176, 73.0%, 7.3%)\",\n    mint3: \"hsl(175, 79.3%, 8.9%)\",\n    mint4: \"hsl(174, 84.8%, 10.3%)\",\n    mint5: \"hsl(174, 90.2%, 11.9%)\",\n    mint6: \"hsl(173, 96.0%, 13.8%)\",\n    mint7: \"hsl(172, 100%, 16.8%)\",\n    mint8: \"hsl(170, 100%, 21.4%)\",\n    mint9: \"hsl(167, 65.0%, 66.0%)\",\n    mint10: \"hsl(163, 80.0%, 77.0%)\",\n    mint11: \"hsl(167, 70.0%, 48.0%)\",\n    mint12: \"hsl(165, 80.0%, 94.8%)\",\n\n    olive1: \"hsl(110, 5.0%, 8.6%)\",\n    olive2: \"hsl(105, 7.4%, 10.6%)\",\n    olive3: \"hsl(106, 6.4%, 13.1%)\",\n    olive4: \"hsl(106, 5.8%, 15.3%)\",\n    olive5: \"hsl(107, 5.3%, 17.4%)\",\n    olive6: \"hsl(107, 4.9%, 19.9%)\",\n    olive7: \"hsl(108, 4.4%, 23.6%)\",\n    olive8: \"hsl(110, 3.8%, 30.6%)\",\n    olive9: \"hsl(110, 6.0%, 42.5%)\",\n    olive10: \"hsl(111, 4.8%, 48.2%)\",\n    olive11: \"hsl(110, 5.0%, 61.8%)\",\n    olive12: \"hsl(110, 6.0%, 93.0%)\",\n\n    orange1: \"hsl(30, 70.0%, 7.2%)\",\n    orange2: \"hsl(28, 100%, 8.4%)\",\n    orange3: \"hsl(26, 91.1%, 11.6%)\",\n    orange4: \"hsl(25, 88.3%, 14.1%)\",\n    orange5: \"hsl(24, 87.6%, 16.6%)\",\n    orange6: \"hsl(24, 88.6%, 19.8%)\",\n    orange7: \"hsl(24, 92.4%, 24.0%)\",\n    orange8: \"hsl(25, 100%, 29.0%)\",\n    orange9: \"hsl(24, 94.0%, 50.0%)\",\n    orange10: \"hsl(24, 100%, 58.5%)\",\n    orange11: \"hsl(24, 100%, 62.2%)\",\n    orange12: \"hsl(24, 97.0%, 93.2%)\",\n\n    pink1: \"hsl(318, 25.0%, 9.6%)\",\n    pink2: \"hsl(319, 32.2%, 11.6%)\",\n    pink3: \"hsl(319, 41.0%, 16.0%)\",\n    pink4: \"hsl(320, 45.4%, 18.7%)\",\n    pink5: \"hsl(320, 49.0%, 21.1%)\",\n    pink6: \"hsl(321, 53.6%, 24.4%)\",\n    pink7: \"hsl(321, 61.1%, 29.7%)\",\n    pink8: \"hsl(322, 74.9%, 37.5%)\",\n    pink9: \"hsl(322, 65.0%, 54.5%)\",\n    pink10: \"hsl(323, 72.8%, 59.2%)\",\n    pink11: \"hsl(325, 90.0%, 66.4%)\",\n    pink12: \"hsl(322, 90.0%, 95.8%)\",\n\n    plum1: \"hsl(301, 20.0%, 9.4%)\",\n    plum2: \"hsl(300, 29.8%, 11.2%)\",\n    plum3: \"hsl(298, 34.4%, 15.3%)\",\n    plum4: \"hsl(297, 36.8%, 18.3%)\",\n    plum5: \"hsl(296, 38.5%, 21.1%)\",\n    plum6: \"hsl(295, 40.4%, 24.7%)\",\n    plum7: \"hsl(294, 42.7%, 30.6%)\",\n    plum8: \"hsl(292, 45.1%, 40.0%)\",\n    plum9: \"hsl(292, 45.0%, 51.0%)\",\n    plum10: \"hsl(295, 50.0%, 55.4%)\",\n    plum11: \"hsl(300, 60.0%, 62.0%)\",\n    plum12: \"hsl(296, 74.0%, 95.7%)\",\n\n    purple1: \"hsl(284, 20.0%, 9.6%)\",\n    purple2: \"hsl(283, 30.0%, 11.8%)\",\n    purple3: \"hsl(281, 37.5%, 16.5%)\",\n    purple4: \"hsl(280, 41.2%, 20.0%)\",\n    purple5: \"hsl(279, 43.8%, 23.3%)\",\n    purple6: \"hsl(277, 46.4%, 27.5%)\",\n    purple7: \"hsl(275, 49.3%, 34.6%)\",\n    purple8: \"hsl(272, 52.1%, 45.9%)\",\n    purple9: \"hsl(272, 51.0%, 54.0%)\",\n    purple10: \"hsl(273, 57.3%, 59.1%)\",\n    purple11: \"hsl(275, 80.0%, 71.0%)\",\n    purple12: \"hsl(279, 75.0%, 95.7%)\",\n\n    mauve1: \"hsl(246, 6.0%, 9.0%)\",\n    mauve2: \"hsl(240, 5.1%, 11.6%)\",\n    mauve3: \"hsl(241, 5.0%, 14.3%)\",\n    mauve4: \"hsl(242, 4.9%, 16.5%)\",\n    mauve5: \"hsl(243, 4.9%, 18.8%)\",\n    mauve6: \"hsl(244, 4.9%, 21.5%)\",\n    mauve7: \"hsl(245, 4.9%, 25.4%)\",\n    mauve8: \"hsl(247, 4.8%, 32.5%)\",\n    mauve9: \"hsl(252, 4.0%, 45.2%)\",\n    mauve10: \"hsl(247, 3.4%, 50.7%)\",\n    mauve11: \"hsl(253, 4.0%, 63.7%)\",\n    mauve12: \"hsl(256, 6.0%, 93.2%)\",\n\n    red1: \"hsl(353, 23.0%, 9.8%)\",\n    red2: \"hsl(357, 34.4%, 12.0%)\",\n    red3: \"hsl(356, 43.4%, 16.4%)\",\n    red4: \"hsl(356, 47.6%, 19.2%)\",\n    red5: \"hsl(356, 51.1%, 21.9%)\",\n    red6: \"hsl(356, 55.2%, 25.9%)\",\n    red7: \"hsl(357, 60.2%, 31.8%)\",\n    red8: \"hsl(358, 65.0%, 40.4%)\",\n    red9: \"hsl(358, 75.0%, 59.0%)\",\n    red10: \"hsl(358, 85.3%, 64.0%)\",\n    red11: \"hsl(358, 100%, 69.5%)\",\n    red12: \"hsl(351, 89.0%, 96.0%)\",\n\n    sage1: \"hsl(155, 7.0%, 8.4%)\",\n    sage2: \"hsl(150, 7.4%, 10.6%)\",\n    sage3: \"hsl(150, 6.7%, 13.1%)\",\n    sage4: \"hsl(150, 6.4%, 15.3%)\",\n    sage5: \"hsl(150, 6.1%, 17.4%)\",\n    sage6: \"hsl(150, 5.8%, 19.9%)\",\n    sage7: \"hsl(150, 5.5%, 23.6%)\",\n    sage8: \"hsl(150, 5.1%, 30.6%)\",\n    sage9: \"hsl(155, 6.0%, 42.5%)\",\n    sage10: \"hsl(153, 4.8%, 48.2%)\",\n    sage11: \"hsl(155, 5.0%, 61.8%)\",\n    sage12: \"hsl(155, 6.0%, 93.0%)\",\n\n    sand1: \"hsl(61, 2.0%, 8.3%)\",\n    sand2: \"hsl(60, 3.7%, 10.6%)\",\n    sand3: \"hsl(58, 3.7%, 13.1%)\",\n    sand4: \"hsl(57, 3.6%, 15.3%)\",\n    sand5: \"hsl(56, 3.7%, 17.4%)\",\n    sand6: \"hsl(55, 3.7%, 19.9%)\",\n    sand7: \"hsl(53, 3.7%, 23.6%)\",\n    sand8: \"hsl(50, 3.8%, 30.6%)\",\n    sand9: \"hsl(50, 4.0%, 42.7%)\",\n    sand10: \"hsl(52, 3.1%, 48.3%)\",\n    sand11: \"hsl(50, 4.0%, 61.8%)\",\n    sand12: \"hsl(56, 4.0%, 92.8%)\",\n\n    sky1: \"hsl(205, 45.0%, 8.6%)\",\n    sky2: \"hsl(202, 71.4%, 9.6%)\",\n    sky3: \"hsl(201, 74.6%, 12.2%)\",\n    sky4: \"hsl(201, 77.4%, 14.4%)\",\n    sky5: \"hsl(200, 80.3%, 16.5%)\",\n    sky6: \"hsl(200, 84.1%, 18.9%)\",\n    sky7: \"hsl(199, 90.2%, 22.1%)\",\n    sky8: \"hsl(198, 100%, 26.1%)\",\n    sky9: \"hsl(193, 98.0%, 70.0%)\",\n    sky10: \"hsl(192, 100%, 77.0%)\",\n    sky11: \"hsl(192, 85.0%, 55.8%)\",\n    sky12: \"hsl(198, 98.0%, 95.8%)\",\n\n    slate1: \"hsl(200, 7.0%, 8.8%)\",\n    slate2: \"hsl(195, 7.1%, 11.0%)\",\n    slate3: \"hsl(197, 6.8%, 13.6%)\",\n    slate4: \"hsl(198, 6.6%, 15.8%)\",\n    slate5: \"hsl(199, 6.4%, 17.9%)\",\n    slate6: \"hsl(201, 6.2%, 20.5%)\",\n    slate7: \"hsl(203, 6.0%, 24.3%)\",\n    slate8: \"hsl(207, 5.6%, 31.6%)\",\n    slate9: \"hsl(206, 6.0%, 43.9%)\",\n    slate10: \"hsl(206, 5.2%, 49.5%)\",\n    slate11: \"hsl(206, 6.0%, 63.0%)\",\n    slate12: \"hsl(210, 6.0%, 93.0%)\",\n\n    teal1: \"hsl(168, 48.0%, 6.5%)\",\n    teal2: \"hsl(169, 77.8%, 7.1%)\",\n    teal3: \"hsl(170, 76.1%, 9.2%)\",\n    teal4: \"hsl(171, 75.8%, 11.0%)\",\n    teal5: \"hsl(171, 75.7%, 12.8%)\",\n    teal6: \"hsl(172, 75.8%, 15.1%)\",\n    teal7: \"hsl(172, 76.7%, 18.6%)\",\n    teal8: \"hsl(173, 80.2%, 23.7%)\",\n    teal9: \"hsl(173, 80.0%, 36.0%)\",\n    teal10: \"hsl(174, 83.9%, 38.2%)\",\n    teal11: \"hsl(174, 90.0%, 40.7%)\",\n    teal12: \"hsl(166, 73.0%, 93.1%)\",\n\n    tomato1: \"hsl(10, 23.0%, 9.4%)\",\n    tomato2: \"hsl(9, 44.8%, 11.4%)\",\n    tomato3: \"hsl(8, 52.0%, 15.3%)\",\n    tomato4: \"hsl(7, 56.3%, 18.0%)\",\n    tomato5: \"hsl(7, 60.1%, 20.6%)\",\n    tomato6: \"hsl(8, 64.8%, 24.0%)\",\n    tomato7: \"hsl(8, 71.2%, 29.1%)\",\n    tomato8: \"hsl(10, 80.2%, 35.7%)\",\n    tomato9: \"hsl(10, 78.0%, 54.0%)\",\n    tomato10: \"hsl(10, 81.7%, 59.0%)\",\n    tomato11: \"hsl(10, 85.0%, 62.8%)\",\n    tomato12: \"hsl(10, 89.0%, 96.0%)\",\n\n    violet1: \"hsl(250, 20.0%, 10.2%)\",\n    violet2: \"hsl(255, 30.3%, 12.9%)\",\n    violet3: \"hsl(253, 37.0%, 18.4%)\",\n    violet4: \"hsl(252, 40.1%, 22.5%)\",\n    violet5: \"hsl(252, 42.2%, 26.2%)\",\n    violet6: \"hsl(251, 44.3%, 31.1%)\",\n    violet7: \"hsl(250, 46.8%, 38.9%)\",\n    violet8: \"hsl(250, 51.8%, 51.2%)\",\n    violet9: \"hsl(252, 56.0%, 57.5%)\",\n    violet10: \"hsl(251, 63.2%, 63.2%)\",\n    violet11: \"hsl(250, 95.0%, 76.8%)\",\n    violet12: \"hsl(252, 87.0%, 96.4%)\",\n\n    yellow1: \"hsl(45, 100%, 5.5%)\",\n    yellow2: \"hsl(46, 100%, 6.7%)\",\n    yellow3: \"hsl(45, 100%, 8.7%)\",\n    yellow4: \"hsl(45, 100%, 10.4%)\",\n    yellow5: \"hsl(47, 100%, 12.1%)\",\n    yellow6: \"hsl(49, 100%, 14.3%)\",\n    yellow7: \"hsl(49, 90.3%, 18.4%)\",\n    yellow8: \"hsl(50, 100%, 22.0%)\",\n    yellow9: \"hsl(53, 92.0%, 50.0%)\",\n    yellow10: \"hsl(54, 100%, 68.0%)\",\n    yellow11: \"hsl(48, 100%, 47.0%)\",\n    yellow12: \"hsl(53, 100%, 91.0%)\",\n  },\n  dark: {\n    amber1: \"hsl(39, 70.0%, 99.0%)\",\n    amber2: \"hsl(40, 100%, 96.5%)\",\n    amber3: \"hsl(44, 100%, 91.7%)\",\n    amber4: \"hsl(43, 100%, 86.8%)\",\n    amber5: \"hsl(42, 100%, 81.8%)\",\n    amber6: \"hsl(38, 99.7%, 76.3%)\",\n    amber7: \"hsl(36, 86.1%, 67.1%)\",\n    amber8: \"hsl(35, 85.2%, 55.1%)\",\n    amber9: \"hsl(39, 100%, 57.0%)\",\n    amber10: \"hsl(35, 100%, 55.5%)\",\n    amber11: \"hsl(30, 100%, 34.0%)\",\n    amber12: \"hsl(20, 80.0%, 17.0%)\",\n\n    blue1: \"hsl(206, 100%, 99.2%)\",\n    blue2: \"hsl(210, 100%, 98.0%)\",\n    blue3: \"hsl(209, 100%, 96.5%)\",\n    blue4: \"hsl(210, 98.8%, 94.0%)\",\n    blue5: \"hsl(209, 95.0%, 90.1%)\",\n    blue6: \"hsl(209, 81.2%, 84.5%)\",\n    blue7: \"hsl(208, 77.5%, 76.9%)\",\n    blue8: \"hsl(206, 81.9%, 65.3%)\",\n    blue9: \"hsl(206, 100%, 50.0%)\",\n    blue10: \"hsl(208, 100%, 47.3%)\",\n    blue11: \"hsl(211, 100%, 43.2%)\",\n    blue12: \"hsl(211, 100%, 15.0%)\",\n\n    bronze1: \"hsl(15, 30.0%, 99.1%)\",\n    bronze2: \"hsl(17, 63.6%, 97.8%)\",\n    bronze3: \"hsl(17, 42.1%, 95.2%)\",\n    bronze4: \"hsl(17, 35.2%, 92.1%)\",\n    bronze5: \"hsl(17, 31.5%, 88.2%)\",\n    bronze6: \"hsl(17, 29.0%, 83.0%)\",\n    bronze7: \"hsl(17, 26.9%, 75.6%)\",\n    bronze8: \"hsl(17, 25.1%, 66.5%)\",\n    bronze9: \"hsl(17, 20.0%, 54.0%)\",\n    bronze10: \"hsl(17, 18.1%, 50.1%)\",\n    bronze11: \"hsl(15, 20.0%, 43.1%)\",\n    bronze12: \"hsl(12, 22.0%, 21.5%)\",\n\n    brown1: \"hsl(30, 40.0%, 99.1%)\",\n    brown2: \"hsl(30, 50.0%, 97.6%)\",\n    brown3: \"hsl(30, 52.5%, 94.6%)\",\n    brown4: \"hsl(30, 53.0%, 91.2%)\",\n    brown5: \"hsl(29, 52.9%, 86.8%)\",\n    brown6: \"hsl(29, 52.5%, 80.9%)\",\n    brown7: \"hsl(29, 51.5%, 72.8%)\",\n    brown8: \"hsl(28, 50.0%, 63.1%)\",\n    brown9: \"hsl(28, 34.0%, 51.0%)\",\n    brown10: \"hsl(27, 31.8%, 47.6%)\",\n    brown11: \"hsl(25, 30.0%, 41.0%)\",\n    brown12: \"hsl(20, 30.0%, 19.0%)\",\n\n    crimson1: \"hsl(332, 100%, 99.4%)\",\n    crimson2: \"hsl(330, 100%, 98.4%)\",\n    crimson3: \"hsl(331, 85.6%, 96.6%)\",\n    crimson4: \"hsl(331, 78.1%, 94.2%)\",\n    crimson5: \"hsl(332, 72.1%, 91.1%)\",\n    crimson6: \"hsl(333, 67.0%, 86.7%)\",\n    crimson7: \"hsl(335, 63.5%, 80.4%)\",\n    crimson8: \"hsl(336, 62.3%, 72.9%)\",\n    crimson9: \"hsl(336, 80.0%, 57.8%)\",\n    crimson10: \"hsl(336, 73.7%, 53.5%)\",\n    crimson11: \"hsl(336, 75.0%, 47.2%)\",\n    crimson12: \"hsl(340, 65.0%, 14.5%)\",\n\n    cyan1: \"hsl(185, 60.0%, 98.7%)\",\n    cyan2: \"hsl(185, 73.3%, 97.1%)\",\n    cyan3: \"hsl(186, 70.2%, 94.4%)\",\n    cyan4: \"hsl(186, 63.8%, 90.6%)\",\n    cyan5: \"hsl(187, 58.3%, 85.4%)\",\n    cyan6: \"hsl(188, 54.6%, 78.4%)\",\n    cyan7: \"hsl(189, 53.7%, 68.7%)\",\n    cyan8: \"hsl(189, 60.3%, 52.5%)\",\n    cyan9: \"hsl(190, 95.0%, 39.0%)\",\n    cyan10: \"hsl(191, 91.2%, 36.8%)\",\n    cyan11: \"hsl(192, 85.0%, 31.0%)\",\n    cyan12: \"hsl(192, 88.0%, 12.5%)\",\n\n    gold1: \"hsl(50, 20.0%, 99.1%)\",\n    gold2: \"hsl(47, 52.9%, 96.7%)\",\n    gold3: \"hsl(46, 38.2%, 93.7%)\",\n    gold4: \"hsl(44, 32.7%, 90.1%)\",\n    gold5: \"hsl(43, 29.9%, 85.7%)\",\n    gold6: \"hsl(41, 28.3%, 79.8%)\",\n    gold7: \"hsl(39, 27.6%, 71.9%)\",\n    gold8: \"hsl(36, 27.2%, 61.8%)\",\n    gold9: \"hsl(36, 20.0%, 49.5%)\",\n    gold10: \"hsl(36, 19.8%, 45.7%)\",\n    gold11: \"hsl(36, 20.0%, 39.0%)\",\n    gold12: \"hsl(36, 16.0%, 20.0%)\",\n\n    grass1: \"hsl(116, 50.0%, 98.9%)\",\n    grass2: \"hsl(120, 60.0%, 97.1%)\",\n    grass3: \"hsl(120, 53.6%, 94.8%)\",\n    grass4: \"hsl(121, 47.5%, 91.4%)\",\n    grass5: \"hsl(122, 42.6%, 86.5%)\",\n    grass6: \"hsl(124, 39.0%, 79.7%)\",\n    grass7: \"hsl(126, 37.1%, 70.2%)\",\n    grass8: \"hsl(131, 38.1%, 56.3%)\",\n    grass9: \"hsl(131, 41.0%, 46.5%)\",\n    grass10: \"hsl(132, 43.1%, 42.2%)\",\n    grass11: \"hsl(133, 50.0%, 32.5%)\",\n    grass12: \"hsl(130, 30.0%, 14.9%)\",\n\n    gray1: \"hsl(0, 0%, 99.0%)\",\n    gray2: \"hsl(0, 0%, 97.3%)\",\n    gray3: \"hsl(0, 0%, 95.1%)\",\n    gray4: \"hsl(0, 0%, 93.0%)\",\n    gray5: \"hsl(0, 0%, 90.9%)\",\n    gray6: \"hsl(0, 0%, 88.7%)\",\n    gray7: \"hsl(0, 0%, 85.8%)\",\n    gray8: \"hsl(0, 0%, 78.0%)\",\n    gray9: \"hsl(0, 0%, 56.1%)\",\n    gray10: \"hsl(0, 0%, 52.3%)\",\n    gray11: \"hsl(0, 0%, 43.5%)\",\n    gray12: \"hsl(0, 0%, 9.0%)\",\n\n    green1: \"hsl(136, 50.0%, 98.9%)\",\n    green2: \"hsl(138, 62.5%, 96.9%)\",\n    green3: \"hsl(139, 55.2%, 94.5%)\",\n    green4: \"hsl(140, 48.7%, 91.0%)\",\n    green5: \"hsl(141, 43.7%, 86.0%)\",\n    green6: \"hsl(143, 40.3%, 79.0%)\",\n    green7: \"hsl(146, 38.5%, 69.0%)\",\n    green8: \"hsl(151, 40.2%, 54.1%)\",\n    green9: \"hsl(151, 55.0%, 41.5%)\",\n    green10: \"hsl(152, 57.5%, 37.6%)\",\n    green11: \"hsl(153, 67.0%, 28.5%)\",\n    green12: \"hsl(155, 40.0%, 14.0%)\",\n\n    indigo1: \"hsl(225, 60.0%, 99.4%)\",\n    indigo2: \"hsl(223, 100%, 98.6%)\",\n    indigo3: \"hsl(223, 98.4%, 97.1%)\",\n    indigo4: \"hsl(223, 92.9%, 95.0%)\",\n    indigo5: \"hsl(224, 87.1%, 92.0%)\",\n    indigo6: \"hsl(224, 81.9%, 87.8%)\",\n    indigo7: \"hsl(225, 77.4%, 82.1%)\",\n    indigo8: \"hsl(226, 75.4%, 74.5%)\",\n    indigo9: \"hsl(226, 70.0%, 55.5%)\",\n    indigo10: \"hsl(226, 58.6%, 51.3%)\",\n    indigo11: \"hsl(226, 55.0%, 45.0%)\",\n    indigo12: \"hsl(226, 62.0%, 17.0%)\",\n\n    lime1: \"hsl(85, 50.0%, 98.7%)\",\n    lime2: \"hsl(85, 66.7%, 96.5%)\",\n    lime3: \"hsl(85, 76.0%, 92.3%)\",\n    lime4: \"hsl(84, 75.3%, 87.5%)\",\n    lime5: \"hsl(84, 71.5%, 81.9%)\",\n    lime6: \"hsl(82, 65.0%, 74.6%)\",\n    lime7: \"hsl(79, 53.2%, 61.8%)\",\n    lime8: \"hsl(76, 61.7%, 45.1%)\",\n    lime9: \"hsl(81, 67.0%, 50.0%)\",\n    lime10: \"hsl(80, 68.3%, 46.9%)\",\n    lime11: \"hsl(75, 80.0%, 26.0%)\",\n    lime12: \"hsl(78, 70.0%, 11.5%)\",\n\n    mint1: \"hsl(165, 80.0%, 98.8%)\",\n    mint2: \"hsl(164, 88.2%, 96.7%)\",\n    mint3: \"hsl(164, 76.6%, 93.3%)\",\n    mint4: \"hsl(165, 68.8%, 89.5%)\",\n    mint5: \"hsl(165, 60.6%, 84.5%)\",\n    mint6: \"hsl(165, 53.5%, 76.9%)\",\n    mint7: \"hsl(166, 50.7%, 66.1%)\",\n    mint8: \"hsl(168, 52.8%, 51.0%)\",\n    mint9: \"hsl(167, 65.0%, 66.0%)\",\n    mint10: \"hsl(167, 59.3%, 63.1%)\",\n    mint11: \"hsl(172, 72.0%, 28.5%)\",\n    mint12: \"hsl(172, 70.0%, 12.0%)\",\n\n    olive1: \"hsl(110, 20.0%, 99.0%)\",\n    olive2: \"hsl(120, 16.7%, 97.6%)\",\n    olive3: \"hsl(119, 10.1%, 95.2%)\",\n    olive4: \"hsl(118, 8.1%, 93.0%)\",\n    olive5: \"hsl(117, 7.1%, 90.8%)\",\n    olive6: \"hsl(115, 6.4%, 88.5%)\",\n    olive7: \"hsl(114, 5.9%, 85.4%)\",\n    olive8: \"hsl(110, 5.2%, 77.3%)\",\n    olive9: \"hsl(110, 3.5%, 55.5%)\",\n    olive10: \"hsl(111, 2.8%, 51.7%)\",\n    olive11: \"hsl(110, 3.0%, 43.0%)\",\n    olive12: \"hsl(110, 25.0%, 9.5%)\",\n\n    orange1: \"hsl(24, 70.0%, 99.0%)\",\n    orange2: \"hsl(24, 83.3%, 97.6%)\",\n    orange3: \"hsl(24, 100%, 95.3%)\",\n    orange4: \"hsl(25, 100%, 92.2%)\",\n    orange5: \"hsl(25, 100%, 88.2%)\",\n    orange6: \"hsl(25, 100%, 82.8%)\",\n    orange7: \"hsl(24, 100%, 75.3%)\",\n    orange8: \"hsl(24, 94.5%, 64.3%)\",\n    orange9: \"hsl(24, 94.0%, 50.0%)\",\n    orange10: \"hsl(24, 100%, 46.5%)\",\n    orange11: \"hsl(24, 100%, 37.0%)\",\n    orange12: \"hsl(15, 60.0%, 17.0%)\",\n\n    pink1: \"hsl(322, 100%, 99.4%)\",\n    pink2: \"hsl(323, 100%, 98.4%)\",\n    pink3: \"hsl(323, 86.3%, 96.5%)\",\n    pink4: \"hsl(323, 78.7%, 94.2%)\",\n    pink5: \"hsl(323, 72.2%, 91.1%)\",\n    pink6: \"hsl(323, 66.3%, 86.6%)\",\n    pink7: \"hsl(323, 62.0%, 80.1%)\",\n    pink8: \"hsl(323, 60.3%, 72.4%)\",\n    pink9: \"hsl(322, 65.0%, 54.5%)\",\n    pink10: \"hsl(322, 63.9%, 50.7%)\",\n    pink11: \"hsl(322, 75.0%, 46.0%)\",\n    pink12: \"hsl(320, 70.0%, 13.5%)\",\n\n    plum1: \"hsl(292, 90.0%, 99.4%)\",\n    plum2: \"hsl(300, 100%, 98.6%)\",\n    plum3: \"hsl(299, 71.2%, 96.4%)\",\n    plum4: \"hsl(299, 62.0%, 93.8%)\",\n    plum5: \"hsl(298, 56.1%, 90.5%)\",\n    plum6: \"hsl(296, 51.3%, 85.8%)\",\n    plum7: \"hsl(295, 48.2%, 78.9%)\",\n    plum8: \"hsl(292, 47.7%, 70.8%)\",\n    plum9: \"hsl(292, 45.0%, 51.0%)\",\n    plum10: \"hsl(292, 50.2%, 46.9%)\",\n    plum11: \"hsl(292, 60.0%, 42.5%)\",\n    plum12: \"hsl(291, 66.0%, 14.0%)\",\n\n    purple1: \"hsl(280, 65.0%, 99.4%)\",\n    purple2: \"hsl(276, 100%, 99.0%)\",\n    purple3: \"hsl(276, 83.1%, 97.0%)\",\n    purple4: \"hsl(275, 76.4%, 94.7%)\",\n    purple5: \"hsl(275, 70.8%, 91.8%)\",\n    purple6: \"hsl(274, 65.4%, 87.8%)\",\n    purple7: \"hsl(273, 61.0%, 81.7%)\",\n    purple8: \"hsl(272, 60.0%, 73.5%)\",\n    purple9: \"hsl(272, 51.0%, 54.0%)\",\n    purple10: \"hsl(272, 46.8%, 50.3%)\",\n    purple11: \"hsl(272, 50.0%, 45.8%)\",\n    purple12: \"hsl(272, 66.0%, 16.0%)\",\n\n    mauve1: \"hsl(300, 20.0%, 99.0%)\",\n    mauve2: \"hsl(300, 7.7%, 97.5%)\",\n    mauve3: \"hsl(294, 5.5%, 95.3%)\",\n    mauve4: \"hsl(289, 4.7%, 93.3%)\",\n    mauve5: \"hsl(283, 4.4%, 91.3%)\",\n    mauve6: \"hsl(278, 4.1%, 89.1%)\",\n    mauve7: \"hsl(271, 3.9%, 86.3%)\",\n    mauve8: \"hsl(255, 3.7%, 78.8%)\",\n    mauve9: \"hsl(252, 4.0%, 57.3%)\",\n    mauve10: \"hsl(253, 3.5%, 53.5%)\",\n    mauve11: \"hsl(252, 4.0%, 44.8%)\",\n    mauve12: \"hsl(260, 25.0%, 11.0%)\",\n\n    red1: \"hsl(359, 100%, 99.4%)\",\n    red2: \"hsl(359, 100%, 98.6%)\",\n    red3: \"hsl(360, 100%, 96.8%)\",\n    red4: \"hsl(360, 97.9%, 94.8%)\",\n    red5: \"hsl(360, 90.2%, 91.9%)\",\n    red6: \"hsl(360, 81.7%, 87.8%)\",\n    red7: \"hsl(359, 74.2%, 81.7%)\",\n    red8: \"hsl(359, 69.5%, 74.3%)\",\n    red9: \"hsl(358, 75.0%, 59.0%)\",\n    red10: \"hsl(358, 69.4%, 55.2%)\",\n    red11: \"hsl(358, 65.0%, 48.7%)\",\n    red12: \"hsl(354, 50.0%, 14.6%)\",\n\n    sage1: \"hsl(155, 30.0%, 98.8%)\",\n    sage2: \"hsl(150, 16.7%, 97.6%)\",\n    sage3: \"hsl(151, 10.6%, 95.2%)\",\n    sage4: \"hsl(151, 8.8%, 93.0%)\",\n    sage5: \"hsl(151, 7.8%, 90.8%)\",\n    sage6: \"hsl(152, 7.2%, 88.4%)\",\n    sage7: \"hsl(153, 6.7%, 85.3%)\",\n    sage8: \"hsl(154, 6.1%, 77.5%)\",\n    sage9: \"hsl(155, 3.5%, 55.5%)\",\n    sage10: \"hsl(154, 2.8%, 51.7%)\",\n    sage11: \"hsl(155, 3.0%, 43.0%)\",\n    sage12: \"hsl(155, 24.0%, 9.0%)\",\n\n    sand1: \"hsl(50, 20.0%, 99.0%)\",\n    sand2: \"hsl(60, 7.7%, 97.5%)\",\n    sand3: \"hsl(59, 6.5%, 95.1%)\",\n    sand4: \"hsl(58, 6.1%, 92.9%)\",\n    sand5: \"hsl(57, 6.0%, 90.7%)\",\n    sand6: \"hsl(56, 5.9%, 88.4%)\",\n    sand7: \"hsl(55, 5.9%, 85.2%)\",\n    sand8: \"hsl(51, 6.0%, 77.1%)\",\n    sand9: \"hsl(50, 2.0%, 55.7%)\",\n    sand10: \"hsl(55, 1.7%, 51.9%)\",\n    sand11: \"hsl(50, 2.0%, 43.1%)\",\n    sand12: \"hsl(50, 6.0%, 10.0%)\",\n\n    sky1: \"hsl(193, 100%, 98.8%)\",\n    sky2: \"hsl(193, 100%, 97.3%)\",\n    sky3: \"hsl(193, 99.0%, 94.7%)\",\n    sky4: \"hsl(193, 91.4%, 91.4%)\",\n    sky5: \"hsl(194, 82.0%, 86.6%)\",\n    sky6: \"hsl(194, 74.1%, 79.5%)\",\n    sky7: \"hsl(194, 72.3%, 69.6%)\",\n    sky8: \"hsl(193, 77.9%, 53.9%)\",\n    sky9: \"hsl(193, 98.0%, 70.0%)\",\n    sky10: \"hsl(193, 87.0%, 66.5%)\",\n    sky11: \"hsl(195, 100%, 31.5%)\",\n    sky12: \"hsl(195, 100%, 13.0%)\",\n\n    slate1: \"hsl(206, 30.0%, 98.8%)\",\n    slate2: \"hsl(210, 16.7%, 97.6%)\",\n    slate3: \"hsl(209, 13.3%, 95.3%)\",\n    slate4: \"hsl(209, 12.2%, 93.2%)\",\n    slate5: \"hsl(208, 11.7%, 91.1%)\",\n    slate6: \"hsl(208, 11.3%, 88.9%)\",\n    slate7: \"hsl(207, 11.1%, 85.9%)\",\n    slate8: \"hsl(205, 10.7%, 78.0%)\",\n    slate9: \"hsl(206, 6.0%, 56.1%)\",\n    slate10: \"hsl(206, 5.8%, 52.3%)\",\n    slate11: \"hsl(206, 6.0%, 43.5%)\",\n    slate12: \"hsl(206, 24.0%, 9.0%)\",\n\n    teal1: \"hsl(165, 60.0%, 98.8%)\",\n    teal2: \"hsl(169, 64.7%, 96.7%)\",\n    teal3: \"hsl(169, 59.8%, 94.0%)\",\n    teal4: \"hsl(169, 53.1%, 90.2%)\",\n    teal5: \"hsl(170, 47.1%, 85.0%)\",\n    teal6: \"hsl(170, 42.6%, 77.9%)\",\n    teal7: \"hsl(170, 39.9%, 68.1%)\",\n    teal8: \"hsl(172, 42.1%, 52.5%)\",\n    teal9: \"hsl(173, 80.0%, 36.0%)\",\n    teal10: \"hsl(173, 83.4%, 32.5%)\",\n    teal11: \"hsl(174, 90.0%, 25.2%)\",\n    teal12: \"hsl(170, 50.0%, 12.5%)\",\n\n    tomato1: \"hsl(10, 100%, 99.4%)\",\n    tomato2: \"hsl(8, 100%, 98.4%)\",\n    tomato3: \"hsl(8, 100%, 96.6%)\",\n    tomato4: \"hsl(8, 100%, 94.3%)\",\n    tomato5: \"hsl(8, 92.8%, 91.0%)\",\n    tomato6: \"hsl(9, 84.7%, 86.3%)\",\n    tomato7: \"hsl(10, 77.3%, 79.5%)\",\n    tomato8: \"hsl(10, 71.6%, 71.0%)\",\n    tomato9: \"hsl(10, 78.0%, 54.0%)\",\n    tomato10: \"hsl(10, 71.5%, 50.0%)\",\n    tomato11: \"hsl(10, 82.0%, 43.5%)\",\n    tomato12: \"hsl(10, 50.0%, 13.5%)\",\n\n    violet1: \"hsl(255, 65.0%, 99.4%)\",\n    violet2: \"hsl(252, 100%, 99.0%)\",\n    violet3: \"hsl(252, 96.9%, 97.4%)\",\n    violet4: \"hsl(252, 91.5%, 95.5%)\",\n    violet5: \"hsl(252, 85.1%, 93.0%)\",\n    violet6: \"hsl(252, 77.8%, 89.4%)\",\n    violet7: \"hsl(252, 71.0%, 83.7%)\",\n    violet8: \"hsl(252, 68.6%, 76.3%)\",\n    violet9: \"hsl(252, 56.0%, 57.5%)\",\n    violet10: \"hsl(251, 48.1%, 53.5%)\",\n    violet11: \"hsl(250, 43.0%, 48.0%)\",\n    violet12: \"hsl(254, 60.0%, 18.5%)\",\n\n    yellow1: \"hsl(60, 54.0%, 98.5%)\",\n    yellow2: \"hsl(52, 100%, 95.5%)\",\n    yellow3: \"hsl(55, 100%, 90.9%)\",\n    yellow4: \"hsl(54, 100%, 86.6%)\",\n    yellow5: \"hsl(52, 97.9%, 82.0%)\",\n    yellow6: \"hsl(50, 89.4%, 76.1%)\",\n    yellow7: \"hsl(47, 80.4%, 68.0%)\",\n    yellow8: \"hsl(48, 100%, 46.1%)\",\n    yellow9: \"hsl(53, 92.0%, 50.0%)\",\n    yellow10: \"hsl(50, 100%, 48.5%)\",\n    yellow11: \"hsl(42, 100%, 29.0%)\",\n    yellow12: \"hsl(40, 55.0%, 13.5%)\",\n  },\n};\n"],
  "mappings": "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",
  "names": ["require_windows", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "checkPathExt", "path", "options", "pathext", "i", "p", "checkStat", "stat", "cb", "er", "require_mode", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "path", "options", "cb", "er", "stat", "checkStat", "checkMode", "mod", "uid", "gid", "myUid", "myGid", "u", "g", "o", "ug", "ret", "require_isexe", "__commonJSMin", "exports", "module", "fs", "core", "isexe", "sync", "path", "options", "cb", "resolve", "reject", "er", "is", "require_which", "__commonJSMin", "exports", "module", "isWindows", "path", "COLON", "isexe", "getNotFoundError", "cmd", "getPathInfo", "opt", "colon", "pathEnv", "pathExtExe", "pathExt", "which", "cb", "found", "step", "i", "resolve", "reject", "ppRaw", "pathPart", "pCmd", "p", "subStep", "ii", "ext", "er", "is", "res", "whichSync", "j", "cur", "require_path_key", "__commonJSMin", "exports", "module", "pathKey", "options", "environment", "key", "require_resolveCommand", "__commonJSMin", "exports", "module", "path", "which", "getPathKey", "resolveCommandAttempt", "parsed", "withoutPathExt", "env", "cwd", "hasCustomCwd", "shouldSwitchCwd", "resolved", "resolveCommand", "require_escape", "__commonJSMin", "exports", "module", "metaCharsRegExp", "escapeCommand", "arg", "escapeArgument", "doubleEscapeMetaChars", "require_shebang_regex", "__commonJSMin", "exports", "module", "require_shebang_command", "__commonJSMin", "exports", "module", "shebangRegex", "string", "match", "path", "argument", "binary", "require_readShebang", "__commonJSMin", "exports", "module", "fs", "shebangCommand", "readShebang", "command", "buffer", "fd", "require_parse", "__commonJSMin", "exports", "module", "path", "resolveCommand", "escape", "readShebang", "isWin", "isExecutableRegExp", "isCmdShimRegExp", "detectShebang", "parsed", "shebang", "parseNonShell", "commandFile", "needsShell", "needsDoubleEscapeMetaChars", "arg", "shellCommand", "parse", "command", "args", "options", "require_enoent", "__commonJSMin", "exports", "module", "isWin", "notFoundError", "original", "syscall", "hookChildProcess", "cp", "parsed", "originalEmit", "name", "arg1", "err", "verifyENOENT", "status", "verifyENOENTSync", "require_cross_spawn", "__commonJSMin", "exports", "module", "cp", "parse", "enoent", "spawn", "command", "args", "options", "parsed", "spawned", "spawnSync", "result", "require_signals", "__commonJSMin", "exports", "module", "require_signal_exit", "__commonJSMin", "exports", "module", "process", "processOk", "assert", "signals", "isWin", "EE", "emitter", "cb", "opts", "loaded", "load", "ev", "remove", "unload", "sig", "sigListeners", "originalProcessEmit", "originalProcessReallyExit", "emit", "event", "code", "signal", "listeners", "processEmit", "processReallyExit", "arg", "ret", "require_buffer_stream", "__commonJSMin", "exports", "module", "PassThroughStream", "options", "array", "encoding", "isBuffer", "objectMode", "stream", "length", "chunks", "chunk", "require_get_stream", "__commonJSMin", "exports", "module", "BufferConstants", "stream", "promisify", "bufferStream", "streamPipelinePromisified", "MaxBufferError", "getStream", "inputStream", "options", "maxBuffer", "resolve", "reject", "rejectPromise", "error", "require_merge_stream", "__commonJSMin", "exports", "module", "PassThrough", "sources", "output", "add", "isEmpty", "remove", "source", "it", "pick_radix_exports", "__export", "command", "__toCommonJS", "import_api", "import_api", "import_node_buffer", "import_node_path", "import_node_child_process", "import_node_process", "import_cross_spawn", "stripFinalNewline", "input", "LF", "CR", "import_node_process", "import_node_path", "import_node_url", "pathKey", "options", "env", "platform", "key", "npmRunPath", "options", "cwd", "process", "path_", "pathKey", "execPath", "previous", "cwdString", "url", "cwdPath", "path", "result", "npmRunPathEnv", "env", "copyProperty", "to", "from", "property", "ignoreNonConfigurable", "toDescriptor", "fromDescriptor", "canCopyProperty", "changePrototype", "fromPrototype", "wrappedToString", "withName", "fromBody", "toStringDescriptor", "toStringName", "changeToString", "name", "newToString", "mimicFunction", "calledFunctions", "onetime", "function_", "options", "returnValue", "callCount", "functionName", "arguments_", "mimicFunction", "onetime_default", "import_os", "getRealtimeSignals", "length", "SIGRTMAX", "SIGRTMIN", "Array", "from", "getRealtimeSignal", "value", "index", "name", "number", "action", "description", "standard", "import_os", "SIGNALS", "name", "number", "action", "description", "standard", "forced", "getSignals", "realtimeSignals", "getRealtimeSignals", "SIGNALS", "map", "normalizeSignal", "name", "number", "defaultNumber", "description", "action", "forced", "standard", "signals", "constantSignal", "constants", "supported", "undefined", "getSignalsByName", "getSignals", "reduce", "getSignalByName", "signalByNameMemo", "name", "number", "description", "supported", "action", "forced", "standard", "signalsByName", "getSignalsByNumber", "signals", "length", "SIGRTMAX", "signalsA", "Array", "from", "value", "getSignalByNumber", "Object", "assign", "signal", "findSignalByNumber", "undefined", "find", "constants", "signalA", "signalsByNumber", "getErrorPrefix", "timedOut", "timeout", "errorCode", "signal", "signalDescription", "exitCode", "isCanceled", "makeError", "stdout", "stderr", "all", "error", "command", "escapedCommand", "killed", "signalsByName", "execaMessage", "isError", "shortMessage", "message", "aliases", "hasAlias", "options", "alias", "normalizeStdio", "stdio", "length", "value", "index", "import_node_os", "import_signal_exit", "DEFAULT_FORCE_KILL_TIMEOUT", "spawnedKill", "kill", "signal", "options", "killResult", "setKillTimeout", "shouldForceKill", "timeout", "getForceKillAfterTimeout", "t", "forceKillAfterTimeout", "isSigterm", "os", "spawnedCancel", "spawned", "context", "timeoutKill", "reject", "setupTimeout", "killSignal", "spawnedPromise", "timeoutId", "timeoutPromise", "resolve", "safeSpawnedPromise", "validateTimeout", "setExitHandler", "cleanup", "detached", "timedPromise", "removeExitHandler", "onExit", "isStream", "stream", "import_get_stream", "import_merge_stream", "handleInput", "spawned", "input", "isStream", "makeAllStream", "all", "mixed", "mergeStream", "getBufferedData", "stream", "streamPromise", "error", "getStreamPromise", "encoding", "buffer", "maxBuffer", "getStream", "getSpawnedResult", "stdout", "stderr", "processDone", "stdoutPromise", "stderrPromise", "allPromise", "nativePromisePrototype", "descriptors", "property", "mergePromise", "spawned", "promise", "descriptor", "value", "args", "getSpawnedPromise", "resolve", "reject", "exitCode", "signal", "error", "normalizeArgs", "file", "args", "NO_ESCAPE_REGEXP", "DOUBLE_QUOTES_REGEXP", "escapeArg", "arg", "joinCommand", "getEscapedCommand", "DEFAULT_MAX_BUFFER", "getEnv", "envOption", "extendEnv", "preferLocal", "localDir", "execPath", "env", "process", "npmRunPathEnv", "handleArguments", "file", "args", "options", "parsed", "crossSpawn", "normalizeStdio", "path", "handleOutput", "value", "error", "stripFinalNewline", "execa", "command", "joinCommand", "escapedCommand", "getEscapedCommand", "validateTimeout", "spawned", "childProcess", "dummySpawned", "errorPromise", "makeError", "mergePromise", "spawnedPromise", "getSpawnedPromise", "timedPromise", "setupTimeout", "processDone", "setExitHandler", "context", "spawnedKill", "spawnedCancel", "handlePromiseOnce", "onetime_default", "exitCode", "signal", "timedOut", "stdoutResult", "stderrResult", "allResult", "getSpawnedResult", "stdout", "stderr", "all", "returnedError", "handleInput", "makeAllStream", "import_fs", "import_path", "pickColor", "command", "stdout", "execa", "error", "nearestColor", "color", "colors", "minDistance", "c", "r", "g", "b", "distance", "parseHslString", "string", "h", "s", "l", "fromHsl", "hsl", "fn", "n", "k", "a", "getTransformedRadixConfig", "rgbToRadix", "color", "radixColors", "hsl", "parseHslString", "rgb", "fromHsl", "toRadix", "colors", "nearest", "nearestColor", "radix", "command", "pickedColor", "pickColor", "radix", "toRadix"]
}
