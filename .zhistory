brew install powerlevel10k
echo "source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme" >>~/.zshrc
cd boot_dev
nvim ~/.zshrc
brew install zsh-autosuggestions
echo "source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" >> ~/.zshrc
brew install zsh-syntax-highlighting
echo "source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ~/.zshrc
ls Courses/boot_dev
ls Courses/boot_dev/go_intro
brew install eza
eza
ls Courses/boot_dev/go_intro/datetest/
brew install zoxide
z Courses/boot_dev
z bo
z boo
z
cd bo
brew install fzf
brew install fd
cd Courses/boot_dev/bookbot/books/
cd ./HTMX\ Prime/app/static/
git clone https://github.com/junegunn/fzf-git.sh.git
brew install bat
cd ./Courses/boot_dev/maze_solver/
bat graphics.py
bat ./cell.py 
bat ./maze.py ./tests.py 
brew install tlrc
tlrc f
tldr fd
eza all
eza -all
tldr eza
ls --long --tree --level=4
ls -all
nvim --version
echo "alias nvim="vim" >> ~/.zshrc
echo "alias nvim="vim" >> ~/.zshrc"
echo 'alias nvim="vim"' >> ~/.zshrc
echo 'alias vim="nvim"' >> ~/.zshrc
vim
brew install ripgrep
mkdir nvim
touch init.lua
mkdir -p lua/timothy/core
mkdir -p lua/timothy/plugins
touch lua/timothy/lazy.lua
ls -t
mv lua nvim/lua
mv init.lua nvim/init.lua
e
cd co
cd conf
cd ~/Library/Keyboard\ Layouts
brew install wget
cluar
brew install jesseduffield/lazygit/lazygit
mv ~/.config/nvim{,.bak}
mv ~/.local/share/nvim{,.bak}\
mv ~/.local/state/nvim{,.bak}\
mv ~/.cache/nvim{,.bak}
rm -rf ~/.config/nvim/.git
\:q
close
nvim Courses
~/.config/nvim
brew install node
brew link node
brew link --overwrite node
node
rm -rf ~/.local/share/nvim ~/.cache/nvim ~/.local/state/nvim
cd /usr/local/bin/
grep
grep nvim
mv ~/.config/nvim{,.bak2}
cd nv
cd nvim
cd ~/.config/nvim
brew uninstall nvim
which -a nvim
brew install nvim
cd ~/.config/
mkdir neovide
sudo ln -s /Applications/Neovide.app/Contents/MacOS/neovide /usr/local/bin/neovide\
sudo ln -s /Applications/WezTerm.app/Contents/MacOS/wezterm /usr/local/bin/wezterm\

which neovide
which wezterm
neovide .
neovide
which nvm
cat config.toml
bat config.toml
mv ~/.config/nvim{,.bak3}\

mv ~/.local/share/nvim{,.bak3}\
mv ~/.local/state/nvim{,.bak3}\
mv ~/.cache/nvim{,.bak}
git clone https://github.com/LazyVim/starter ~/.config/nvim
sudo chown -R 501:20 "/Users/timothybesada/.npm\

sudo chown -R 501:20 "/Users/timothybesada/.npm"
npm install -g neovim
cd nvim.bak3
cd Courses
cd config.to
cd con
cd neovi
$HOME/.config/neovide/
cd $HOME/.config/neovide/
cd $XDG_CONFIG_HOME/neovide/
cd $HOME
cd nvi
cd nvid
cd neovide
neovide --frame "none"
nvid
nvim config.toml
nvid config.toml
cd OneDrive\ -\ KTH
cd Studier/Teknisk\ Matematik/Ãƒ¥rskurs\ 2/VT24/Fysik\ fÃ¶r\ Teknisk\ Matematik
cd SH1017-Physics_for_Engineering_Mathetmatics
cd Lab_4
which python -a
which -a python
which -a python3
python3
brew install pyenv
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc\
echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc\
echo 'eval "$(pyenv init -)"' >> ~/.zshrc
source ~/.zshrc
pyenv install -l
pyenv install 3.12.3
pyenv global 3.12.3
exec zsh
cd Lab_
cd Code
uv pip numpy
uv install numpy
uv pip install numpy
uv pip install matplotlib
uv pip install ipykernel
uv pip install scipy
uv pip install scipy.fftpack
"/Users/timothybesada/Library/CloudStorage/OneDrive-KTH/Studier/Teknisk Matematik/AÌƒªrskurs 2/VT24/Fysik fÃ¶r Teknisk Matematik/SH1017-Physics_for_Engineering_Mathetmatics/Lab_4/Code/.venv/bin/python" "/Users/timothybesada/Library/CloudStorage/OneDrive-KTH/Studier/Teknisk Matematik/AÌƒªrskurs 2/VT24/Fysik fÃ¶r Teknisk Matematik/SH1017-Physics_for_Engineering_Mathetmatics/Lab_4/Code/splitoperator.py"
"/Users/timothybesada/Library/CloudStorage/OneDrive-KTH/Studier/Teknisk Matematik/AÌƒªrskurs 2/VT24/Fysik fÃ¶r Teknisk Matematik/SH1017-Physics_for_Engineering_Mathetmatics/Lab_4/Code/.venv/bin/python" "/Users/timothybesada/Library/CloudStorage/OneDrive-KTH/Studier/Teknisk Matematik/AÌƒªrskurs 2/VT24/Fysik fÃ¶r Teknisk Matematik/SH1017-Physics_for_Engineering_Mathetmatics/Lab_4/Code/splitoperator2.py"
git commit -a -m "Added lab 4 and cleaned up previous labs"
mkdir -p ~/.warp\
cd ~/.warp/\
git clone https://github.com/warpdotdev/themes.git
cd themes
cd ~/.warp/themes
cd we
cd ~/.wezterm.lua
test
systemstats
man Applications
brew link --overwrite pillow
brew reinstall qmk
brew install --rebuild-from-source qmk/qmk/qmk
brew uninstall qmk
brew link python@3.12
qmk
brew python
brew install python
brew install python@3.12
brew reinstall python@3.12
sudo rm -rf /usr/local/Cellar/python@3.12/3.12.3.reinstall
brew install qmk/qmk/qmk
qmk setup
qmk list-keyboards
cd ~/qmk_firmware/
qmk doctor
git clone https://github.com/vial-kb/vial-qmk
make git-submodule
cd keyboards/42keebs/cantor_pro_frood/
cd vi
brew install --cask nikitabobko/tap/aerospace
cp /Applications/AeroSpace.app/Contents/Resources/default-config.toml ~/.aerospace.toml
Aerospace
Aerospace move left
Aerospace focus -h
sudo /Developer/Library/uninstall-devtools â€ƒ³mode=all.
sudo /Developer/Library/uninstall-devtools â€ƒ³mode=all
sudo /Applications/Utilities/Xcode.app/Contents/MacOS/Xcode uninstall
rm -rf /Applications/Xcode.app
rm -rw /System/Volumes/Data/Developer/Applications/Xcode.app
rm /System/Volumes/Data/Developer/Applications/Xcode.app
rm -rf /System/Volumes/Data/Developer/Applications/Xcode.app
sudo rm -rf /System/Volumes/Data/Developer/Applications/Xcode.app
brew tap FelixKratz/formulae\
brew install borders
borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0
which borders
/opt/homebrew/opt/borders/bin/borders active_color=0xaa00a56c inactive_color=0x00333333 width=6
borders active_color=0xaa00a56c inactive_color=0x00333333 width=6
borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0 &
borders active_color=0xaa00a56c inactive_color=0x00333333 width=12
aerospace move -h
open -n /System/Applications/Warp.app
open -n /System/Applications/warp.app
which warp
which Warp
cd /System/Applications/
cd Applications/
open -h
open /Applications/Warp.app/
open /Applications/Google\ Chrome.app/
i
-v
v
sudo showkey
cat -v
cd Projects/KollinxKTHAIS/
cd KTHAIS/
cd KollinxKTHAIS/
python
uv
source .venv/activate
ls .venv
activate
uv venv -h
cd ./Courses/boot_dev/
powerlevel10k configure
plevel10k config
p10k configure
tldr fzf
go_intro/datetest/ 
cd go_intro/datetest/ 
nvim .wezterm.lua 
builtin cd -- /Users/timothybesada/dev/Courses
fzf
cd **
cd ./boot_dev/go_intro/
cd Cou
fd
lsd
lsd -a
ls o-a
curl -s https://cht.sh/:cht.sh | sudo tee /usr/local/bin/cht.sh && sudo chmod +x /usr/local/bin/cht.sh
cht.sh go reverse a list
ch
edit-zsh
reload-zsh
ch python loop
nvim ./.wezterm.lua 
builtin cd -- /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS
pre-commit install
uv pip install pre-commit
git commit -m "linter settings"
uv pip install pytest
uv pip install Flask-Testing coverage
uv pip install markdown
uv pip install checkmytex
brew install languagetool
uv pip install langchain_community
uv pip install flask_migrate
uv pip install
ch python pip install from requirements
uv pip install -r requirements.txt
builtin cd -- /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/flask
ls -al
nvim .env
uv pip install Flask
uv pip install flask
ch run flask app
ch python while loop
ch python flask
flask run
ch python rmtree
ch python shutil
ch python shutil remove
UserWarning: api \
th local uri.                            The data will be stored locally\

pytest -v
pytest -W
pytest -W all
cd vial-qmk/
nvim keyboards/42keebs/cantor_pro_frood/
make 42keebs/cantor_pro_frood:vial_achordion
 uv pip install flask-sqlalchemy
/Users/timothybesada/Downloads/chktex-1.7.9/install-sh ; exit;
quit
git commit -a -m "add working test config for vdb"
git add knowledge-graph/*
git commit -m "reset index on dataframes"
mkdir website-clone
python dotenv
python main.py
python theory-agent/main.py
dotenv
cd theory-agent
python3 main.py
wg
wget -m -p -E -k -np https://kollin.io/course/10/exercises?sort=score&dir=asc&exercise=2851&exerciseIds=2851%2C3290%2C2636%2C6592%2C3237%2C3236%2C3357%2C3335%2C3326%2C3362&value=popularity
wget -m -p -E -k -np 'https://kollin.io/course/10/exercises?sort=score&dir=asc&exercise=2851&exerciseIds=2851%2C3290%2C2636%2C6592%2C3237%2C3236%2C3357%2C3335%2C3326%2C3362&value=popularity'
wget -m -p -E -k -np https://kollin.io/course/10
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent https://kollin.io/course/10
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent https://kollin.io/course/10/
wget --load-cookies cookies.txt -m -p -E -k -np https://kollin.io/course/10
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent --include-directories=/course/10 --restrict-file-names=nocontrol https://kollin.io/course/10\

wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent --span-hosts --include-directories=/course/10 --domains=kollin.io https://kollin.io/course/10\

wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent --span-hosts https://kollin.io/course/10\

rm -rf .
rm -rf *
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent https://kollin.io/course/10\

cd kollin.io
sed
tldr sed
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent 'https://kollin.io/course/10/exercises?sort=score&dir=asc&exercise=2851&exerciseIds=2851%2C3290%2C2636%2C6592%2C3237%2C3236%2C3357%2C3335%2C3326%2C3362&value=popularity'
wget --load-cookies cookies.txt -p -k --no-parent --no-clobber https://kollin.io/course/10\
nvim
rm -rf kollin.io
nvim website-clone
python3 -m http.server 8000
npm install puppeteer
nvim fetch_page.js
node fetch_page.js
brew install httrack
httrack "https://kollin.io/course/10" --cookies1 cookies.txt --mirror --convert-links --adjust-extension --no-parent --depth=1 --ext-depth=1\

httrack -h
httrack "https://kollin.io/course/10" --cookies cookies.txt --mirror --convert-links --adjust-extension --no-parent --depth=1 --ext-depth=1\

httrack "https://kollin.io/course/10" --cookies cookies.txt --mirror --depth=1 --ext-depth=1\

cd wc
cd wclone
cd clone
httrack 'https://kollin.io/course/10/exercises?sort=score&dir=asc&exercise=2851&exerciseIds=2851%2C3290%2C2636%2C6592%2C3237%2C3236%2C3357%2C3335%2C3326%2C3362&value=popularity'  --cookies cookies.txt --mirror --depth=1 --ext-depth=1\

httrack "https://kollin.io/course/10" --cookies1 cookies.txt --mirror --convert-links --adjust-extension --no-parent --depth=2 --ext-depth=2 --include "https://kollin.io/course/10/*" --path "./website-clone"\

httrack "https://kollin.io/course/10" --cookies=Cookies.txt --mirror --convert-links --adjust-extension --depth=2 --ext-depth=2 --include "https://kollin.io/course/10/*" --path "./website-clone"\

httrack "https://kollin.io/course/10" --cookies=Cookies.txt --mirror --depth=2 --ext-depth=2 --include "https://kollin.io/course/10/*" --path "./website-clone"\

* Unknown option: include
httrack "https://kollin.io/course/10" --cookies=Cookies.txt --mirror --depth=2 --ext-depth=2 --stay-on-same-domain --domains=kollin.io --path "./website-clone"\

httrack "https://kollin.io/course/10" --cookies=Cookies.txt --mirror --depth=2 --ext-depth=2 --stay-on-same-domain --path "./website-clone"\

cd website-clone
nvim .
wget --load-cookies cookies.txt --mirror --convert-links --adjust-extension --page-requisites --no-parent --span-hosts https://kollin.io/course/10/user-test/35096\

nvim ./kollin.io/course/10/user-test/35096.html 
find . ! -name 'cookies.txt' -delete
cd clo
cd cookies.txt 
cd KollinxKTHAIS/flask/ 
cd app/static/css/ 
cd Projects/KTHAIS/KollinxKTHAIS/ 
cd kon
uv pip install langchain_openai
/Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/.venv/bin/python /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/flask/config.py
/Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/.venv/bin/python /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/flask/app/models/tag_model.py
echo '*.db' >> .gitignore
git commit -m -a "add initialization of tags and atoms to dev db"
git commit -a -m "add initialization of tags and atoms to dev db"
git commit -m "add initialization of tags and atoms to dev db"
git add flask/app/services/atom_service.py flask/tests/test-services/test_atom_service.py
git commit -m "refactor: remove auto-commit"
git restore --staget flask/app/models/views.py flask/initialize_db.py
git restore --staged flask/app/models/views.py flask/initialize_db.py
git commit -m "refactor: remove auto-commit for all services"
/Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/.venv/bin/python /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/flask/initialize_db.py
ruff .
ruff check .
ruff -h
git restore --staged solution-agent/test_latex_parse.py
git add flask/app/models/views.py
git commit -m "finished db initialization with swedish translation of all atoms"
flask db heads
flask db upgrade
flask db migrate -m "Initial migration"
flask db status
flask db --help
export FLASK_APP=app
flask db migrate -m "Update"
sqlite3 data/sqlite.db\
sqlite> DROP TABLE alembic_version;\
sqlite> .quit
rm -rf migrations
flask db check
flask shell
flask db history
flask db current
flask db downgrade
flask db downgrade -1
rm -r migrations
flask db init
flask db migrate -m "Initial migration after reset"
flask db stamp head
flask db migrate -m "add exercise text to solution model"
flask db upgrade\

ruff format .
git commit -m "reset migrations and added exercise text to solution model"
git commit -m "moved migration README"
nvim ~/.aerospace.toml
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.0/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.0/python_files/deactivate/zsh/envVars.txt
/Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/.venv/bin/python /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/theory-agent/main.py
rnvim
cd ./dev/Projects/KTHAIS/KollinxKTHAIS/
nviym 
python3 generate.py
uv pip install langchain
uv pip install langchain_core
/Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/.venv/bin/python /Users/timothybesada/dev/Projects/KTHAIS/KollinxKTHAIS/solution-agent/generate.py
python3 solution-agent/generate.py
python solution-agent/generate.py
rm -rf .git
mv . /..
tldr mv
cd KollinxKTHAIS
mv KollinxKTHAIS/.* .
cp -rf KollinxKTHAIS/.* .
cp -rf KollinxKTHAIS/* .
rm .DS_Store
rm -rf KollinxKTHAIS
git remote add origin git@github.com:crash-course-sverige/knowledge-management-system.git\
git branch -M main\
git push -u origin main
ls 
rm -rf .devcontainer
cd flask
python run.py
python flask/run.py
git commit -m "cleanup and adding dbs"
nvim 
uv pip install fuzzywuzzy
borders active_color=0xaa33E6FF inactive_color=0x00333333
borders
borders active_color=0xaa33E6FF inactive_color=0x00333333 width=12
git checkout postgres
git chec
tldr git checkout
git checkout -b postgres
cd kollin
/Users/timothybesada/dev/Kollin ; exit
nvim wez
cd Projects
mkdir Vectorworks
cd Vectorworks
lc
git clone https://github.com/VectorworksDeveloper/SDKExamples/tree/master/Examples/WebPaletteExample
git clone https://github.com/VectorworksDeveloper/SDKExamples.git
which npm
cd Examples
ll
cd WebPaletteExample
cd Source
cd SourceHTML
npm install
npm run edv
npm run dev
npm run watch
cd ../..
cd SDKExamples
xcodes download -h
xcodes download 14.1
xcodes list
cd /Users/timothybesada/Downloads/Xcode-14.1.0+14B47b.xip
xcodes install 14.1
xcodes -h
xcodes uninstall
xcodes install
brew install aria2
xcodes install --latest
rg
rg wellcome
grep wellcome
grep -h
tldr grep
grep "wellcome"
grep "wellcome" .
grep -r "wellcome"
fzf -h
cd dev
mkdir LearnCPP
cd LearnCPP
mkdir hello_world
cd hello_world
code helloworld.cpp
cd "/Users/timothybesada/dev/Courses/LearnCPP/std_cin/" && g++ stdcin.cpp -o stdcin && "/Users/timothybesada/dev/Courses/LearnCPP/std_cin/"stdcin
make stdcin.cpp
clang stdcin.cpp
clang --version
clang --update
clang update
clang -h
clang help
clang -help
5
/bin/bash -c 'arch -arch x86_64 "/Library/Developer/CommandLineTools/Library/PrivateFrameworks/LLDB.framework/Resources/darwin-debug" --unix-socket=/tmp/dbipTf --arch=x86_64 --working-dir "/Users/timothybesada/dev/Courses/LearnCPP/std_cin" --disable-aslr --env="OS_ACTIVITY_DT_MODE=enable" --  "/Users/timothybesada/dev/Courses/LearnCPP/std_cin/stdcin" ; echo Process exited with status $? ; exit';exit
/Users/timothybesada/dev/Kollin/AI-KG-Django ; exit
cd Projects/Kollin/AI-KG-Django
django-admin startproject Kollin-AI-KG
django-admin startproject kollin_ai_kg
cd kol
cd Ko
cd Kollin
dev/Projects/Kollin/Django/ 
cd dev/Projects/Kollin/Django/ 
cd kollin_ai_kg
lv p,p
cd Django/kollin_ai_kg
uv pip install psycopg2
rm -rf .venv
rm -rf kollin_ai_kg
cd Django
uv pip install django
django-admin startproject kollin_ai_kg .
nvim docker-compose.yml
nvim Dockerfile
pip freeze > requirements.txt
/Users/timothybesada/dev/Projects/Kollin/Django ; exit
docker-compose up --build
docker pull postgres
docker images
python manage.py runserver
bat requirements.txt
docker build -t kollinDjango .
docker build -t kollindjango .
docker run -d -p 8000:8000 kollindjango
docker ps
docker exec -it <container id> bash
docker exec -it 0ff56f73a626 bash
cd Kol
git clone git@github.com:crash-course-sverige/documentation.git
cd documentation
/Users/timothybesada/dev/Projects/Kollin ; exit
builtin cd -- /Users/timothybesada/dev/Projects/Kollin/AI-KG-FastAPI
code .gitignore
lr -a
touch __init__.py
tldr touch
touch models/node
touch -c models/node.py
touch models/node.py
mkdir models
mkdir tests
mkdir api
mkdir api/routes
find
find .
mkdir core
touch models/__init__.py
touch api/__init__.py api/routes/__init__.py
find . -tree
find . -t
find --tree .
tldr find
find -tree .
ls -tree
ls --tree
cd cour
mkdir FastAPI_TDD
cd FastAPI_TDD
open
brew install mypy
uv venv
cd ,,
ls -a --tree
uv pip install fastapi
deactivate
uv pip install mypy
pip install mypy
pip install --upgrade pip
which dmypy
mypy
mypy .
which python
which python3
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/Project/main.py"
uvicorn main:app --reload
docker-compose up
uv pip install python-dotenv
cd scripts
chmod u+x db-setup.sh
chmod +x db-setup.sh
ls -lj
git init
git commit -m "batman"
uv pip install sqlalchemy
uv pip install psycopg2-binary
cd Project
uv pip install alembic
printenv
uv pip install pytest-alembic
git add ..
docker networks
docker network
docker network prune
docker network ls
uv pip install docker
cd 
cd Downloads
cd --dev-try-fastapi-development-2024-live-phase-1
alembic -n devdb revision --autogenerate -m "initial"
cd Dow
cd --dev-try-fastapi-development-2024-live-phase-2
git commit -m "db & test setup"
cd koll
cd Fla
cd AI-KG-Flask
alembic -n devdb revision --autogenerate -m "rename category to atom"
uv pip install requests
uv pip install types-requests
alembic -n devdb revision --autogenerate -m "add atom, solution and tag model"
alembic -n devdb revision --autogenerate -m "update models"
alembic revision --autogenerate -m "squashed migration"
alembic devdb downgrade base
rm -rf alembic/versions/*
rm -rf migrations/versions/*
alembic -n devdb downgrade base
alembic -n devdb current\

alembic -n devdb current
alembic -n devdb revision --autogenerate -m "squashed migration"\

alembic -n devdb revision --autogenerate -m "base migration"\

alembic init migrations
pytest -s
git commit -m "added models and tests"
pytest -m model
git commit -m "model tests updates"
alembic -n devdb upgrade head\

pgloader sqlite.db postgresql+psycopg2://postgres:postgres@127.0.0.1:5433/kollin_kg
pgloader sqlite.db postgresql+psycopg2:////postgres:postgres@127.0.0.1:5433/kollin_kg
alembic -n devdb revision --autogenerate -m "add views"
pgloader --cast -h
pgloader --cast
pgloader --cast --type
pgloader --cast --type "integer to integer using integer-to-string"  sqlite.db postgresql://postgres:postgres@127.0.0.1:5433/kollin_kg
pgloader -h
pgloader --type "integer to integer" sqlite.db postgresql://postgres:postgres@127.0.0.1:5433/kollin_kg
pgloader sqlite.db postgresql://postgres:postgres@127.0.0.1:5433/kollin_kg
alembic -n devdb stamp head
bat main.py
source .venv/bin/activate
fastapi dev main.py
cd doc
ls
git fetch
git status
git pull
git reset --hard
git status
git pull
git status
git fetch
git status
touch .gitignore .obsidian/workspace.json
git status
git reset --hard
nvim .gitignore
git status
git push
git pull
git status
nvim .gitignore
git status
git add .gitignore
git status
nvim .gitignore
git status
ls
ls -a
git status
git fetch
git restore .gitignore
git statuss
git status
mv sqlite.db sqlite_dump.db
ls
git status
git add .
git status
git commit -m "start on schema on routes for atom"
pytest
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
pytest
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
pytest
fastapi dev app/main.py
pytest
git status
git add .
git status
git commit -m "progress on atom endpoint"
git status
ls
alembic -n devdb revision --autogenerate -m "base migration"
docker-compose up -d
alembic -n devdb revision --autogenerate -m "base migration"
alembic -n devdb upgrade head
ls
gzip pgres_dump_insert_data.sql
ls
alembic -n devdb revision --autogenerate -m "base migration"
alembic -n devdb upgrade head
alembic -n devdb revision --autogenerate -m "base migration"
alembic -n devdb upgrade head
pytest
alembic -n devdb revision --autogenerate -m "test"
alembic history
alembic -n devdb history
git status
git ad3.
git commit -m "simplified models and file structure"
git add .
git commit -m "simplified models and file structure"
git status
git add .
git commit -m "add db backup"
git status
pytest
git add .
git commit -m "cleaned up tests"
git status
git add .
git commit -m "fixed db ids"
git status
git add .
git commit -m "working on atom update"
git status
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
fastapi dev app/main.py
git status
git add .
git commit -m "progress on atom crud and roudes"
/Users/timothybesada/dev/Courses/FastAPI_TDD/.venv/bin/python
git status
echo '*.log' >> .gitignore
bat .gitignore
git status
git restore dev.log
git status
git restore app.log
git status
git add .
git commit -m "progress on api"
git status
fastapi dev app/main.py
lsof -i :8000
kill 26789
fastapi dev app/main.py
lsof -i :8000
kill 26789 25476 2926
lsof -i :8000
fastapi dev app/main.py
lsof -i :8000
kill 26789
lsof -i :8000
kill -9 25476 26789
fastapi dev app/main.py
git status
git add .
git commit -m "added base for tag crud, schemas  and routes"
git status
nvim .gitignore
git status
git commit -a
git status
nvim .gitignore
git rm --cached *.log
git status
git add .
git commit -a -m "untrack logs"
git status
alembic -n devdb revision --autogenerate -m "rename column examiner_text to problem_statement"
alembic -n devdb upgrade head
cd Koll
ls
cd solution-agent
ls
cd sample-ad
cd sample-data
ls
code .
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/dataset/populate_db.py"
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/dataset/populate_db.py"
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/populate_db.py"
fastapi dev app/main.py
ls
python app/populate_db.py
cd app
python populate_db.py
cd ..
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/populate_db.py"
python app/populate_db.py
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/populate_db.py"
/Users/timothybesada/dev/Courses/FastAPI_TDD/.venv/bin/python
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/populate_db.py"
fastapi dev app/main.py
git status
git commit -a -m "progress on solutions"
git status
git add .
git commit -a -m "progress on solutions"
git status
python app/translate_tags.py
cd Koll
ls
open .
uv pip install pydantic_settings
uv pip freeze > requirements.txt
uv pip install pydantic_settings
uv pip freeze > requirements.txt
git status
git add .
git commit -m "started on llm integration"
python app/core/config.py
nvim
pytest
uv pip install httpx
uv pip install openai
python app/services/llm_service.py
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
python app/services/llm_service.py
python -m app.services.llm_service
/usr/bin/python3 /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/printEnvVariablesToFile.py /Users/timothybesada/.vscode/extensions/ms-python.python-2024.8.1/python_files/deactivate/zsh/envVars.txt
python -m app.services.llm_service
/Users/timothybesada/dev/Courses/FastAPI_TDD ; exit
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/utils/text_processing.py"
/Users/timothybesada/dev/Courses/FastAPI_TDD/.venv/bin/python /Users/timothybesada/dev/Courses/FastAPI_TDD/app/utils/text_processing.py
python -m app.services.llm_service
git status
git add .
git commit -m "started on keyword extraction"
python -m app.services.llm_service
git status
git add .
git commit -m "progress on prompts"
python -u "/Users/timothybesada/dev/Courses/FastAPI_TDD/app/services/llm_service.py"
python -m app.services.llm_service
uv pip install anthropic
python -m app.services.llm_service
# install prerequisites\
## rust\
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\
## pgrx\
cargo install --locked cargo-pgrx\
cargo pgrx init --pg16 pg_config\
\
#download, build and install pgvectorscale\
cd /tmp\
git clone --branch <version> https://github.com/timescale/pgvectorscale\
cd pgvectorscale/pgvectorscale\
cargo pgrx install --release
cargo install --locked cargo-pgrx\
cargo pgrx init --pg16 pg_config
cargo install --locked cargo-pgrx
cargo pgrx init --pg16 pg_config
sudo apt-get install make gcc pkg-config clang postgresql-server-dev-16 libssl-dev
sudo apt install make gcc pkg-config clang postgresql-server-dev-16 libssl-dev
sudo brew install make gcc pkg-config clang postgresql-server-dev-16 libssl-dev
brew install make gcc pkg-config clang postgresql-server-dev-16 libssl-dev
brew install postgresql-server-dev-16
cd Fas
docker exec -t devdb pg_dumpall -c -U postgres > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql
docker exec -t kollin_kg pg_dumpall -c -U postgres > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql
docker exec -t dev_db pg_dumpall -c -U postgres > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql
docker exec -t kollin_kg-dev_db-1 pg_dumpall -c -U postgres > dump_`date +%d-%m-%Y"_"%H_%M_%S`.sql
docker-compose -h
docker-compose up -h
docker-compose down
docker build -f Dockerfile.postgres-pgvectorscale -t postgres-pgvectorscale:latest .
cd tmp
git clone --branch v0.2.0 https://github.com/timescale/pgvectorscale
git clone --branch 0.2.0 https://github.com/timescale/pgvectorscale
docker build -f Dockerfile.postgres-pgvectorscale -t postgres-pgvectorscale:latest .
docker build --progress=plain -f Dockerfile.postgres-pgvectorscale -t postgres-pgvectorscale:latest .
docker build -f Dockerfile.postgres-pgvectorscale -t postgres-pgvectorscale:latest .
docker-compose up -d
docker-compose down
docker-compose up -d
docker-compose down
docker-compose up -d
docker-compose down
docker-compose up -d
ls
docker cp dump_02-07-2024_16_15_48.sql kollin_kg-dev_db:/tmp/database_dump.sql
docker cp dump_02-07-2024_16_15_48.sql kollin_kg-dev_db-1:/tmp/database_dump.sql
docker exec -it kollin_kg-dev_db-1 psql -U postgres -d kollin_kg -f /tmp/database_dump.sql
docker pull timescale/timescaledb-ha:pg16
uv pip install pgvector
docker pull dpage/pgadmin4
docker-compose down
docker-compose up -d
docker-compose down
docker-compose up -d
git status
git add .
git commit -m "added pgvector, pgvectoscale and pgadmin to db"
git status
nvim
rm /Users/timothybesada/.local/share/nvim/lazy/neo-tree.nvim/.git/index.lock
rm ~/.local/share/nvim/lazy/neo-tree.nvim/.git/index.lock
nvim
nvim ~/.wezterm.lua
ls
source .venv/bin/activate
ls
alembic -n devdb revision --autogenerate -m "add trgm index to atom name"
alembic -n devdb upgrade head
git status
git add .
git commit -m "working in keyword search"
fastapi dev app/main.py
python app/utils/json_to_markdown.py
nvim
nvim ~/.wezterm.lua
nvim
ls
clear
python -m app.services.llm_service
source .venv/bin/activate
python -m app.services.llm_service
clear
brew install tmux
brew update all
brew upgrade all
brew upgrade
tmux -V
nvim ~/.tmux.conf
tmux
nvim ~/.tmux.conf
tmux detach
tmux
nvim ~/.tmux.conf
tmux kill
tmux kill-session
tmux ls
tmux attach
nvim ~/.tmux.conf
tmux ls
tmux kill-session 0
tmux kill-session
tmux
exit
exit
nvim ~/.tmux.conf
kill
exit
exit
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
nvim ~/.tmux.conf
nvim
exit
nvim
tmux
nvim
nvim ~/.tmux.conf
nvim
tmex
tmux
nvim
nvim ~/.tmux.conf
nvim
nvim ~/.tmux.conf
nvim
tmux
nvim
tmux kill-session
tmux
nvim ~/.tmux.conf
tmux kill-server
tmux
nvim ~/.tmux.conf
tmux kill-server
nvim ~/.tmux.conf
tmux
nvim ~/.tmux.conf
nvim
nvim ~/.tmux.conf
nvim
tmux kill-server
tmux
nvim ~/.tmux.conf
nvim
nvim ~/.tmux.conf
cat ./FM-Git_in_depth/advanced-git/README.md 
nvim ~/.tmux.conf
tmux kill-server
tmux
nvim ~/.tmux.conf
clear
nvim
tmux
nvim
exit
cd fast
ls
source .venv/bin/activate
exit
nvim
exit
exit
fastapi dev app/main.py
cd fas
fastapi dev app/main.py
source .venv/bin/activate
fastapi dev app/main.py
docker-compose up -d
cd fas
docker-compose up -d
python app/utils/json_to_markdown.py
cd
mkdir dotfiles
cd dotfiles
cp ~/,x
,
cp ~/.zshrc .
ls
ls -lah
clear
mv ~/.zshrc ~/.zshrc.bak
brew install stow
clear
stow .
ls -lah
ls -lah .zshrc
ls
ls -a
ls -l
ls -la
ls -ah
ls -ah .zshrc
nvim .zshrc
ls -lah .zshrc
source .zshrc
ls -lah .zshrc
ls
ls -lah
clear
tmux
exit
: 1720161574:0;cd dotfiles
: 1720161578:0;ls -lah 
: 1720161584:0;ls -lah .zshrc
: 1720161596:0;cd
: 1720161601:0;ls -lah .zshrc
: 1720161605:0;cd dotfiles
: 1720161607:0;nvim .zshrc
: 1720161626:0;ls -lah .zshrc
: 1720161634:0;cd dotfiles
: 1720161653:0;git init
: 1720161691:0;git remote add origin git@github.com:TimothyBesada/dotfiles.git\
git branch -M main\
git push -u origin main
: 1720161695:0;git status
: 1720161697:0;git add .
: 1720161698:0;git remote add origin git@github.com:TimothyBesada/dotfiles.git\
git branch -M main\
git push -u origin main
: 1720161712:0;git status
: 1720161713:0;git push
: 1720161752:0;git status
: 1720161756:0;git commit -m "batman"
: 1720161764:0;git remote add origin git@github.com:TimothyBesada/dotfiles.git\
git branch -M main\
git push -u origin main
: 1720161768:0;git status
: 1720161927:0;cp ~/.wezterm.lua .
: 1720161930:0;stow .
: 1720161991:0;stow --adopt .
: 1720161994:0;ls
: 1720161997:0;ls -lah
: 1720162017:0;ls -lah ../.wezterm.lua
: 1720162022:0;ls
: 1720162036:0;cd
: 1720162037:0;ls
: 1720162041:0;ls -lah
: 1720162071:0;bat .zsh_history
: 1720162101:0;bat .zhistory
: 1720162142:0;cp .zhistory /dotfiles/.zhistory
: 1720162154:0;cp .zhistory dotfiles/.zhistory
: 1720162162:0;ls -lah dotfiles/
: 1720162187:0;cp .zsh_history dotfiles/.zsh_history
: 1720162192:0;nvim .zshrc
: 1720162203:0;cd dot
: 1720162205:0;ls
: 1720162208:0;ls -a
: 1720162217:0;rm .zsh_history
: 1720162220:0;stow --adopt .
: 1720162221:0;ls
: 1720162223:0;git status
: 1720162225:0;git add .
: 1720162238:0;git status
: 1720162250:0;git restore --staged .wezterm.lua
: 1720162252:0;git status
: 1720162260:0;git add .zhistory
: 1720162271:0;git commit -m ".zhistory"
: 1720162274:0;git status
: 1720162281:0;git add .wezterm.lua
: 1720162282:0;git status
: 1720162292:0;git commit -m "wezterm config"
: 1720162294:0;git status
: 1720162313:0;nvim README.md
: 1720162491:0;ls
: 1720162495:0;git status
: 1720162499:0;git add .
